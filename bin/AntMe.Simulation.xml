<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AntMe.Simulation</name>
    </assembly>
    <members>
        <member name="T:AntMe.Deutsch.Ameise">
            <summary>
            Repräsentiert eine Ameise
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Insekt">
            <summary>
            Repräsentiert ein beliebiges Lebewesen auf dem Spielfeld
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Spielobjekt">
            <summary>
            Allgemeines Spielelement
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.Spielobjekt.element">
            <summary>
            Speichert die Referenz auf das original Spielobjekt
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Spielobjekt.op_Equality(AntMe.Deutsch.Spielobjekt,AntMe.Deutsch.Spielobjekt)">
            <summary>
            operator ==
            </summary>
            <param name="a">Vergleichsobjekt 1</param>
            <param name="b">Vergleichsobjekt 2</param>
            <returns></returns>
        </member>
        <member name="M:AntMe.Deutsch.Spielobjekt.op_Inequality(AntMe.Deutsch.Spielobjekt,AntMe.Deutsch.Spielobjekt)">
            <summary>
            operator !=
            </summary>
            <param name="a">Vergleichsobjekt 1</param>
            <param name="b">Vergleichsobjekt 2</param>
            <returns></returns>
        </member>
        <member name="M:AntMe.Deutsch.Spielobjekt.Equals(System.Object)">
            <summary>
            Vergleicht dieses Element mit einem anderen
            </summary>
            <param name="obj">Vergleichsobjekt</param>
            <returns>Haben den gleichen Inhalt</returns>
        </member>
        <member name="M:AntMe.Deutsch.Spielobjekt.GetHashCode">
            <summary>
            Erstellt einen eindeutigen Code für dieses Objekt
            </summary>
            <returns>eindeutiger Code</returns>
        </member>
        <member name="P:AntMe.Deutsch.Spielobjekt.Element">
            <summary>
            Gibt das Basiselement zurück
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Spielobjekt.Id">
            <summary>
            Liefert die eindeutige ID dieses Elements
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.Id">
            <summary>
            Liefer die eindeutige ID dieses Insektes
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.AktuelleEnergie">
            <summary>
            Gibt die aktuelle Lebensenergie an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.AktuelleGeschwindigkeit">
            <summary>
            Gibt die aktuelle geschwindigkeit an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.Angriff">
            <summary>
            Gibt die Angriffsstärke an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.Drehgeschwindigkeit">
            <summary>
            Gibt die aktuelle Geschwindigkeit an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.MaximaleEnergie">
            <summary>
            Gibt die maximale Lebensenergie an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.MaximaleGeschwindigkeit">
            <summary>
            Gibt die maximale Geschwindigkeit an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.Sichtweite">
            <summary>
            Gibt die Sichtweite an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.RestWinkel">
            <summary>
            Gibt den noch zu rotierenden Winkel an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.Richtung">
            <summary>
            Gibt die Ausrichtung der Ameise an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Insekt.RestStrecke">
            <summary>
            Gibt die noch zu laufende Strecke an
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Ameise.AktuelleLast">
            <summary>
            Liefert die aktuelle Last
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Ameise.GetragenesObst">
            <summary>
            Liefert einen Verweis auf das aktuell getragene Obst
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Ameise.MaximaleLast">
            <summary>
            Liefert die maximale Belastbarkeit der Ameise
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Ameise.Reichweite">
            <summary>
            Liefert die Reichweite der Ameise
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Ameise.Volk">
            <summary>
            Liefet den Volknamen dieser Ameise
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Basisameise">
            <summary>
            Basisklasse für die Implementierung einer deutschen Ameise. Hier befinden sich 
            alle notwendigen Methoden, Eigenschaften und Events zur Interaktion mit der Umgebung.
            <see href="http://wiki.antme.net/de/Ameisenentwicklung">Weitere Infos</see>
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreAnt">
            <summary>
            Abstrakte Basisklasse für alle Ameisen.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="T:AntMe.Simulation.CoreInsect">
            <summary>
            Abstrakte Basisklasse für alle Insekten.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="T:AntMe.Simulation.ICoordinate">
            <summary>
            Ermöglicht es, die Koordinate eines Objekts auf dem Spielfeld abzufragen.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="P:AntMe.Simulation.ICoordinate.CoordinateBase">
            <summary>
            Liest die Koordinate eines Objekts auf dem Spielfeld aus.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.neueId">
            <summary>
            Die Id des nächste erzeugten Insekts.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.SmelledMarker">
            <summary>
            Speichert die Markierungen, die das Insekt schon gesehen hat. Das
            verhindert, daß das Insekt zwischen Markierungen im Kreis läuft.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.id">
            <summary>
            Die Id die das Insekt während eines Spiels eindeutig indentifiziert.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.koordinate">
            <summary>
            Die Position des Insekts auf dem Spielfeld.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.NimmBefehleEntgegen">
            <summary>
            Legt fest, ob das Insekt Befehle entgegen nimmt.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.CasteIndexBase">
            <summary>
            Der Index der Kaste des Insekts in der Kasten-Struktur des Spielers.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.colony">
            <summary>
            Das Volk zu dem das Insekts gehört.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.Init(AntMe.Simulation.CoreColony,System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Der abstrakte Insekt-Basiskonstruktor.
            </summary>
            <param name="colony">Das Volk zu dem das neue Insekt gehört.</param>
            <param name="vorhandeneInsekten">Hier unbenutzt!</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.BrauchtNochTräger(AntMe.Simulation.CoreFruit)">
            <summary>
            Gibt an, ob weitere Insekten benötigt werden, um ein Stück Obst zu
            tragen.
            </summary>
            <param name="obst">Obst</param>
            <returns></returns>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.DreheUmWinkelBase(System.Int32)">
            <summary>
            Dreht das Insekt um den angegebenen Winkel. Die maximale Drehung beträgt
            -180 Grad (nach links) bzw. 180 Grad (nach rechts). Größere Werte werden
            abgeschnitten.
            </summary>
            <param name="winkel">Winkel</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.DreheInRichtungBase(System.Int32)">
            <summary>
            Dreht das Insekt in die angegebene Richtung (Grad).
            </summary>
            <param name="richtung">Richtung</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.DreheZuZielBase(AntMe.Simulation.ICoordinate)">
            <summary>
            Dreht das Insekt in die Richtung des angegebenen Ziels.
            </summary>
            <param name="ziel">Ziel</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.DreheUmBase">
            <summary>
            Dreht das Insekt um 180 Grad.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GeheGeradeausBase">
            <summary>
            Lässt das Insekt unbegrenzt geradeaus gehen.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GeheGeradeausBase(System.Int32)">
            <summary>
            Lässt das Insekt die angegebene Entfernung in Schritten geradeaus gehen.
            </summary>
            <param name="entfernung">Die Entfernung.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GeheZuZielBase(AntMe.Simulation.ICoordinate)">
            <summary>
            Lässt das Insekt auf ein Ziel zugehen. Das Ziel darf sich bewegen.
            Wenn das Ziel eine Wanze ist, wird dieser angegriffen.
            </summary>
            <param name="ziel">Das Ziel.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GreifeAnBase(AntMe.Simulation.CoreInsect)">
            <summary>
            Lässt das Insekt ein Ziel angreifen. Das Ziel darf sich bewegen.
            In der aktuellen Version kann das Ziel nur eine Wanze sein.
            </summary>
            <param name="ziel">Ziel</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GeheWegVonBase(AntMe.Simulation.ICoordinate)">
            <summary>
            Lässt das Insekt von der aktuellen Position aus entgegen der Richtung zu
            einer Quelle gehen. Wenn die Quelle ein Insekt eines anderen Volkes ist,
            befindet sich das Insekt auf der Flucht.
            </summary>
            <param name="quelle">Die Quelle.</param> 
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GeheWegVonBase(AntMe.Simulation.ICoordinate,System.Int32)">
            <summary>
            Lässt das Insekt von der aktuellen Position aus die angegebene
            Entfernung in Schritten entgegen der Richtung zu einer Quelle gehen.
            Wenn die Quelle ein Insekt eines anderen Volkes ist, befindet sich das
            Insekt auf der Flucht.
            </summary>
            <param name="quelle">Die Quelle.</param> 
            <param name="entfernung">Die Entfernung in Schritten.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.GeheZuBauBase">
            <summary>
            Lässt das Insekt zum nächsten Bau gehen.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.BleibStehenBase">
            <summary>
            Lässt das Insekt anhalten. Dabei geht sein Ziel verloren.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.NimmBase(AntMe.Simulation.CoreSugar)">
            <summary>
            Lässt das Insekt Zucker von einem Zuckerhaufen nehmen.
            </summary>
            <param name="zucker">Zuckerhaufen</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.NimmBase(AntMe.Simulation.CoreFruit)">
            <summary>
            Lässt das Insekt ein Obststück nehmen.
            </summary>
            <param name="obst">Das Obststück.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.LasseNahrungFallenBase">
            <summary>
            Lässt das Insekt die aktuell getragene Nahrung fallen. Das Ziel des
            Insekts geht dabei verloren.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.SprüheMarkierungBase(System.Int32,System.Int32)">
            <summary>
            Lässt die Ameise eine Markierung sprühen. Die Markierung enthält die
            angegebene Information und breitet sich um die angegebene Anzahl an
            Schritten weiter aus. Je weiter sich eine Markierung ausbreitet, desto
            kürzer bleibt sie aktiv.
            </summary>
            <param name="information">Die Information.</param>
            <param name="ausbreitung">Die Ausbreitung in Schritten.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.SprüheMarkierungBase(System.Int32)">
            <summary>
            Lässt die Ameise eine Markierung sprühen. Die Markierung enthält die
            angegebene Information und breitet sich nicht aus. So hat die Markierung
            die maximale Lebensdauer.
            </summary>
            <param name="information">Die Information.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreInsect.Bewegen">
            <summary>
            Berechnet die Bewegung des Insekts.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreInsect.aktuelleGeschwindigkeitI">
            <summary>
            Die aktuelle Geschwindigkeit des Insekts in der internen Einheit.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.KasteBase">
            <summary>
            Die Kaste des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.BugsInViewrange">
            <summary>
            Die Anzahl von Wanzen in Sichtweite des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.ForeignAntsInViewrange">
            <summary>
            Die Anzahl feindlicher Ameisen in Sichtweite des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.FriendlyAntsInViewrange">
            <summary>
            Die Anzahl befreundeter Ameisen in Sichtweite des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.FriendlyAntsFromSameCasteInViewrange">
            <summary>
            Die Anzahl befreundeter Ameisen der selben Kaste in Sichtweite des
            Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.TeamAntsInViewrange">
            <summary>
            Anzahl Ameisen aus befreundeten Völkern in sichtweite des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.RichtungBase">
            <summary>
            Die Richtung in die das Insekt gedreht ist.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.ZurückgelegteStreckeBase">
            <summary>
            Die Strecke die die Ameise zurückgelegt hat, seit sie das letzte Mal in
            einem Ameisenbau war.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.ZurückgelegteStreckeI">
            <summary>
            Die Strecke die die Ameise zurückgelegt hat, seit sie das letzte Mal in
            einem Ameisenbau war in der internen Einheit.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.RestStreckeBase">
            <summary>
            Die Strecke die das Insekt geradeaus gehen wird, bevor das nächste Mal
            Wartet() aufgerufen wird bzw. das Insekt sich zu seinem Ziel ausrichtet.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.RestStreckeI">
            <summary>
            Die Strecke die das Insekt geradeaus gehen wird, bevor das nächste 
            Mal Wartet() aufgerufen wird bzw. das Insekt sich zu seinem Ziel
            ausrichtet in der internen Einheit.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.RestWinkelBase">
            <summary>
            Der Winkel um den das Insekt sich noch drehen muß, bevor es wieder
            geradeaus gehen kann.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.ZielBase">
            <summary>
            Das Ziel auf das das Insekt zugeht.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.EntfernungZuBauBase">
            <summary>
            Liefert die Entfernung in Schritten zum nächsten Ameisenbau.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.GetragenesObstBase">
            <summary>
            Gibt das Obst zurück, das das Insekt gerade trägt.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.AngekommenBase">
            <summary>
            Gibt zurück on das Insekt bei seinem Ziel angekommen ist.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.CoordinateBase">
            <summary>
            Die Position des Insekts auf dem Spielfeld.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.AktuelleGeschwindigkeitBase">
            <summary>
            Die aktuelle Geschwindigkeit des Insekts in Schritten. Wenn das Insekt
            seine maximale Last trägt, halbiert sich seine Geschwindigkeit.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.MaximaleGeschwindigkeitBase">
            <summary>
            Die maximale Geschwindigkeit des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.DrehgeschwindigkeitBase">
            <summary>
            Die Drehgeschwindigkeit des Insekts in Grad pro Runde.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.AktuelleLastBase">
            <summary>
            Die Last die die Ameise gerade trägt.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.MaximaleLastBase">
            <summary>
            Die maximale Last die das Insekt tragen kann.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.SichtweiteBase">
            <summary>
            Die Sichtweite des Insekts in Schritten.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.SichtweiteI">
            <summary>
            Die Sichtweite des Insekts in der internen Einheit.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.ReichweiteBase">
            <summary>
            Die Reichweite des Insekts in Schritten.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.ReichweiteI">
            <summary>
            Die Reichweite des Insekts in der internen Einheit.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.AktuelleEnergieBase">
            <summary>
            Die verbleibende Energie des Insekts.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.MaximaleEnergieBase">
            <summary>
            Die maximale Energie des Insetks.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreInsect.AngriffBase">
            <summary>
            Die Angriffstärke des Insekts. Wenn das Insekt Last trägt ist die
            Angriffstärke gleich Null.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.BestimmeKasteBase(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Bestimmt die Kaste einer neuen Ameise.
            </summary>
            <param name="anzahl">Die Anzahl der von jeder Klaste bereits vorhandenen Ameisen.</param>
            <returns>Der Name der Kaste der Ameise.</returns>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.ErzeugeInfo">
            <summary>
            Erzeugt ein AmeiseZustand-Objekt mit den aktuellen Daten der Ameise.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.WartetBase">
            <summary>
            Wird wiederholt aufgerufen, wenn der die Ameise nicht weiss wo sie
            hingehen soll.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.WirdMüdeBase">
            <summary>
            Wird einmal aufgerufen, wenn die Ameise ein Drittel ihrer maximalen 
            Reichweite überschritten hat.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.SiehtBase(AntMe.Simulation.CoreSugar)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise mindestens einen
            Zuckerhaufen sieht.
            </summary>
            <param name="zucker">Der nächstgelegene Zuckerhaufen.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.SiehtBase(AntMe.Simulation.CoreFruit)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise mindstens ein
            Obststück sieht.
            </summary>
            <param name="obst">Das nächstgelegene Obststück.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.ZielErreichtBase(AntMe.Simulation.CoreSugar)">
            <summary>
            Wird einmal aufgerufen, wenn die Ameise einen Zuckerhaufen als Ziel
            hat und bei diesem ankommt.
            </summary>
            <param name="zucker">Der Zuckerhaufen.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.ZielErreichtBase(AntMe.Simulation.CoreFruit)">
            <summary>
            Wird einmal aufgerufen, wenn die Ameise ein Obststück als Ziel hat und
            bei diesem ankommt.
            </summary>
            <param name="obst">Das Obstück.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.RiechtFreundBase(AntMe.Simulation.CoreMarker)">
            <summary>
            Wird einmal aufgerufen, wenn die Ameise eine Markierung des selben
            Volkes riecht. Einmal gerochene Markierungen werden nicht erneut
            gerochen.
            </summary>
            <param name="markierung">Die nächste neue Markierung.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.SiehtFreundBase(AntMe.Simulation.CoreAnt)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise mindstens eine Ameise des
            selben Volkes sieht.
            </summary>
            <param name="ameise">Die nächstgelegene befreundete Ameise.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.SiehtVerbündetenBase(AntMe.Simulation.CoreAnt)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise mindestens eine Ameise verbündeter
            Völker sieht.
            </summary>
            <param name="ameise"></param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.SiehtFeindBase(AntMe.Simulation.CoreBug)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise mindestens eine Wanze
            sieht.
            </summary>
            <param name="wanze">Die nächstgelegene Wanze.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.SiehtFeindBase(AntMe.Simulation.CoreAnt)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise mindestens eine Ameise eines
            anderen Volkes sieht.
            </summary>
            <param name="ameise">Die nächstgelegen feindliche Ameise.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.WirdAngegriffenBase(AntMe.Simulation.CoreBug)">
            <summary>
            Wird wiederholt aufgerufen, wenn die Ameise von einer Wanze angegriffen
            wird.
            </summary>
            <param name="wanze">Die angreifende Wanze.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.WirdAngegriffenBase(AntMe.Simulation.CoreAnt)">
            <summary>
            Wird wiederholt aufgerufen in der die Ameise von einer Ameise eines
            anderen Volkes Ameise angegriffen wird.
            </summary>
            <param name="ameise">Die angreifende feindliche Ameise.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.IstGestorbenBase(AntMe.Simulation.CoreKindOfDeath)">
            <summary>
            Wird einmal aufgerufen, wenn die Ameise gestorben ist.
            </summary>
            <param name="todesArt">Die Todesart der Ameise</param>
        </member>
        <member name="M:AntMe.Simulation.CoreAnt.TickBase">
            <summary>
            Wird unabhängig von äußeren Umständen in jeder Runde aufgerufen.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreAnt.IstMüdeBase">
            <summary>
            Gibt an, ob die Ameise müde ist.
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.BestimmeKaste(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Jedes mal, wenn eine neue Ameise geboren wird, muss ihre Berufsgruppe
            bestimmt werden. Das kannst du mit Hilfe dieses Rückgabewertes dieser 
            Methode steuern.
            <see href="http://wiki.antme.net/de/API1:BestimmeKaste">Weitere Infos</see>
            </summary>
            <param name="anzahl">Anzahl Ameisen pro Kaste</param>
            <returns>Name der Kaste zu der die geborene Ameise gehören soll</returns>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.IstGestorben(AntMe.Deutsch.Todesart)">
            <summary>
            Wenn eine Ameise stirbt, wird diese Methode aufgerufen. Man erfährt dadurch, wie 
            die Ameise gestorben ist. Die Ameise kann zu diesem Zeitpunkt aber keinerlei Aktion 
            mehr ausführen.
            <see href="http://wiki.antme.net/de/API1:IstGestorben">Weitere Infos</see>
            </summary>
            <param name="todesart">Art des Todes</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.RiechtFreund(AntMe.Deutsch.Markierung)">
            <summary>
            Markierungen, die von anderen Ameisen platziert werden, können von befreundeten Ameisen 
            gewittert werden. Diese Methode wird aufgerufen, wenn eine Ameise zum ersten Mal eine 
            befreundete Markierung riecht.
            <see href="http://wiki.antme.net/de/API1:RiechtFreund(Markierung)">Weitere Infos</see>
            </summary>
            <param name="markierung">Die gerochene Markierung</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.Sieht(AntMe.Deutsch.Obst)">
            <summary>
            Sobald eine Ameise innerhalb ihres Sichtradius einen Apfel erspäht wird 
            diese Methode aufgerufen. Als Parameter kommt das betroffene Stück Obst.
            <see href="http://wiki.antme.net/de/API1:Sieht(Obst)">Weitere Infos</see>
            </summary>
            <param name="obst">Das gesichtete Stück Obst</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.Sieht(AntMe.Deutsch.Zucker)">
            <summary>
            Sobald eine Ameise innerhalb ihres Sichtradius einen Zuckerhügel erspäht wird 
            diese Methode aufgerufen. Als Parameter kommt der betroffene Zuckerghügel.
            <see href="http://wiki.antme.net/de/API1:Sieht(Zucker)">Weitere Infos</see>
            </summary>
            <param name="zucker">Der gesichtete Zuckerhügel</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.SiehtFeind(AntMe.Deutsch.Ameise)">
            <summary>
            So wie Ameisen unterschiedliche Nahrungsmittel erspähen können, entdecken Sie auch 
            andere Spielelemente. Entdeckt die Ameise eine Ameise aus einem feindlichen Volk, 
            so wird diese Methode aufgerufen.
            <see href="http://wiki.antme.net/de/API1:SiehtFeind(Ameise)">Weitere Infos</see>
            </summary>
            <param name="ameise">Erspähte feindliche Ameise</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.SiehtFeind(AntMe.Deutsch.Wanze)">
            <summary>
            So wie Ameisen unterschiedliche Nahrungsmittel erspähen können, entdecken Sie auch 
            andere Spielelemente. Entdeckt die Ameise eine Wanze, so wird diese Methode aufgerufen.
            <see href="http://wiki.antme.net/de/API1:SiehtFeind(Wanze)">Weitere Infos</see>
            </summary>
            <param name="wanze">Erspähte Wanze</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.SiehtFreund(AntMe.Deutsch.Ameise)">
            <summary>
            So wie Ameisen unterschiedliche Nahrungsmittel erspähen können, entdecken Sie auch 
            andere Spielelemente. Entdeckt die Ameise eine Ameise aus dem eigenen Volk, so 
            wird diese Methode aufgerufen.
            <see href="http://wiki.antme.net/de/API1:SiehtFreund(Ameise)">Weitere Infos</see>
            </summary>
            <param name="ameise">Erspähte befreundete Ameise</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.SiehtVerbündeten(AntMe.Deutsch.Ameise)">
            <summary>
            So wie Ameisen unterschiedliche Nahrungsmittel erspähen können, entdecken Sie auch 
            andere Spielelemente. Entdeckt die Ameise eine Ameise aus einem befreundeten Volk 
            (Völker im selben Team), so wird diese Methode aufgerufen.
            <see href="http://wiki.antme.net/de/API1:SiehtVerb%C3%BCndeten(Ameise)">Weitere Infos</see>
            </summary>
            <param name="ameise">Erspähte verbündete Ameise</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.Tick">
            <summary>
            Diese Methode wird in jeder Simulationsrunde aufgerufen - ungeachtet von zusätzlichen 
            Bedingungen. Dies eignet sich für Aktionen, die unter Bedingungen ausgeführt werden 
            sollen, die von den anderen Methoden nicht behandelt werden.
            <see href="http://wiki.antme.net/de/API1:Tick">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.Wartet">
            <summary>
            Wenn die Ameise keinerlei Aufträge hat, wartet sie auf neue Aufgaben. Um dir das 
            mitzuteilen, wird diese Methode hier aufgerufen.
            <see href="http://wiki.antme.net/de/API1:Wartet">Weitere Infos</see>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AntMe.Deutsch.Basisameise.WirdAngegriffen(AntMe.Deutsch.Ameise)" -->
        <member name="M:AntMe.Deutsch.Basisameise.WirdAngegriffen(AntMe.Deutsch.Wanze)">
            <summary>
            Es kann vorkommen, dass feindliche Lebewesen eine Ameise aktiv angreifen. Sollte 
            eine Wanze angreifen, wird diese Methode hier aufgerufen und die Ameise kann 
            entscheiden, wie sie darauf reagieren möchte.
            <see href="http://wiki.antme.net/de/API1:WirdAngegriffen(Wanze)">Weitere Infos</see>
            </summary>
            <param name="wanze">Angreifende Wanze</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.WirdMüde">
            <summary>
            Erreicht eine Ameise ein drittel ihrer Laufreichweite, wird diese Methode aufgerufen.
            <see href="http://wiki.antme.net/de/API1:WirdM%C3%BCde">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.ZielErreicht(AntMe.Deutsch.Obst)">
            <summary>
            Hat die Ameise ein Stück Obst als Ziel festgelegt, wird diese Methode aufgerufen, 
            sobald die Ameise ihr Ziel erreicht hat. Ab jetzt ist die Ameise nahe genug um mit 
            dem Ziel zu interagieren.
            <see href="http://wiki.antme.net/de/API1:ZielErreicht(Obst)">Weitere Infos</see>
            </summary>
            <param name="obst">Das erreichte Stück Obst</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.ZielErreicht(AntMe.Deutsch.Zucker)">
            <summary>
            Hat die Ameise eine Zuckerhügel als Ziel festgelegt, wird diese Methode aufgerufen, 
            sobald die Ameise ihr Ziel erreicht hat. Ab jetzt ist die Ameise nahe genug um mit 
            dem Ziel zu interagieren.
            <see href="http://wiki.antme.net/de/API1:ZielErreicht(Zucker)">Weitere Infos</see>
            </summary>
            <param name="zucker">Der erreichte Zuckerhügel</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.DreheInRichtung(System.Int32)">
            <summary>
            Die Ameise dreht sich in die angegebene Richtung. Die Drehrichtung wird 
            dabei automatisch bestimmt.
            <see href="http://wiki.antme.net/de/API1:DreheInRichtung">Weitere Infos</see>
            </summary>
            <param name="richtung">Zielrichtung</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.DreheUmWinkel(System.Int32)">
            <summary>
            Die Ameise dreht sich um den angegebenen Winkel. Positive Werte drehen 
            die Ameise nach rechts, negative nach links.
            <see href="http://wiki.antme.net/de/API1:DreheUmWinkel">Weitere Infos</see>
            </summary>
            <param name="winkel">Winkel</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.DreheUm">
            <summary>
            Die Ameise dreht sich um 180 Grad in die entgegengesetzte Richtung. Hat 
            die selbe Wirkung wie DreheUmWinkel(180).
            <see href="http://wiki.antme.net/de/API1:DreheUm">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.DreheZuZiel(AntMe.Deutsch.Spielobjekt)">
            <summary>
            Die Ameise dreht sich in die Richtung des angegebenen Ziels.
            <see href="http://wiki.antme.net/de/API1:DreheZuZiel">Weitere Infos</see>
            </summary>
            <param name="ziel">Anvisiertes Ziel</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.BleibStehen">
            <summary>
            Die Ameise bleibt stehen und vergisst ihr aktuelles Ziel. In der nächsten 
            Runde wird das Ereignis Wartet() aufgerufen werden.
            <see href="http://wiki.antme.net/de/API1:BleibStehen">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GeheGeradeaus">
            <summary>
            Die Ameise geht geradeaus. Das Ziel der Ameise bleibt unangetastet. Wenn 
            ein Wert angegeben wird, wird die Ameise wieder ihr Ziel anvisieren, 
            nachdem sie die angegebene Entfernung zurückgelegt hat.
            <see href="http://wiki.antme.net/de/API1:GeheGeradeaus">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GeheGeradeaus(System.Int32)">
            <summary>
            Die Ameise geht geradeaus. Das Ziel der Ameise bleibt unangetastet. Wenn 
            ein Wert angegeben wird, wird die Ameise wieder ihr Ziel anvisieren, 
            nachdem sie die angegebene Entfernung zurückgelegt hat.
            <see href="http://wiki.antme.net/de/API1:GeheGeradeaus">Weitere Infos</see>
            </summary>
            <param name="entfernung">Zu laufende Strecke in Ameisenschritten</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GeheWegVon(AntMe.Deutsch.Spielobjekt)">
            <summary>
            Die Ameise dreht sich in die Richtung die vom angegebenen Ziel weg zeigt 
            und geht dann geradeaus. Das Ziel der Ameise bleibt unangetastet und es 
            kann eine Entfernung angegeben werden.
            <see href="http://wiki.antme.net/de/API1:GeheWegVon">Weitere Infos</see>
            </summary>
            <param name="ziel">Objekt, vor dem weggegangen werden soll</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GeheWegVon(AntMe.Deutsch.Spielobjekt,System.Int32)">
            <summary>
            Die Ameise dreht sich in die Richtung die vom angegebenen Ziel weg zeigt 
            und geht dann geradeaus. Das Ziel der Ameise bleibt unangetastet und es 
            kann eine Entfernung angegeben werden.
            <see href="http://wiki.antme.net/de/API1:GeheWegVon">Weitere Infos</see>
            </summary>
            <param name="ziel">Objekt, vor dem weggegangen werden soll</param>
            <param name="entfernung">Entfernung, die zurückgelegt werden soll</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GeheZuZiel(AntMe.Deutsch.Spielobjekt)">
            <summary>
            Die Ameise speichert das angegebene Ziel und geht dort hin.
            <see href="http://wiki.antme.net/de/API1:GeheZuZiel">Weitere Infos</see>
            </summary>
            <param name="ziel">Ziel</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GeheZuBau">
            <summary>
            Die Ameise speichert den nächstgelegenen Bau als Ziel und geht dort hin.
            <see href="http://wiki.antme.net/de/API1:GeheZuBau">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.GreifeAn(AntMe.Deutsch.Insekt)">
            <summary>
            Die Ameise speichert die angegebene Wanze oder die angegebene feindliche 
            Ameise als Ziel und geht dort hin. Wenn die Ameise angekommen ist, 
            beginnt der Kampf.
            <see href="http://wiki.antme.net/de/API1:GreifeAn">Weitere Infos</see>
            </summary>
            <param name="ziel">Angriffsziel</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.Nimm(AntMe.Deutsch.Nahrung)">
            <summary>
            Die Ameise nimmt die angegebene Nahrung auf. Bei einem Zuckerhaufen nimmt 
            sie so viel wie möglich weg, bis sie ihre maximale Last erreicht hat 
            (siehe <see cref="P:AntMe.Deutsch.Basisameise.AktuelleLast"/> und <see cref="P:AntMe.Deutsch.Basisameise.MaximaleLast"/>).
            Im Falle eines Obststückes beginnt die Ameise das Obst zu tragen 
            (siehe <see cref="P:AntMe.Deutsch.Basisameise.GetragenesObst"/>).
            <see href="http://wiki.antme.net/de/API1:Nimm">Weitere Infos</see>
            </summary>
            <param name="nahrung">Nahrung</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.LasseNahrungFallen">
            <summary>
            Die Ameise lässt die gerade getragene Nahrung fallen. Zucker geht dabei 
            verloren, Äpfel bleiben liegen und können wieder aufgenommen werden. Der 
            Befehl muss nicht ausgeführt werden um Nahrung im Bau abzuliefern. Das 
            passiert dort automatisch.
            <see href="http://wiki.antme.net/de/API1:LasseNahrungFallen">Weitere Infos</see>
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.SprüheMarkierung(System.Int32)">
            <summary>
            Die Ameise sprüht an der aktuellen Stelle eine Duftmarkierung. Mögliche 
            Parameter sind eine in der Markierung hinterlegte Information (diese kann im 
            Ereignis Sieht(Markierung) über "markierung.Information" ausgelesen werden) und 
            die Ausbreitung der Markierung. Je größer die Ausbreitung, desto schneller 
            verschwindet die Markierung wieder.
            <see href="http://wiki.antme.net/de/API1:Spr%C3%BCheMarkierung">Weitere Infos</see>
            </summary>
            <param name="information">Information</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.SprüheMarkierung(System.Int32,System.Int32)">
            <summary>
            Die Ameise sprüht an der aktuellen Stelle eine Duftmarkierung. Mögliche Parameter 
            sind eine in der Markierung hinterlegte Information (diese kann im Ereignis 
            Sieht(Markierung) über markierung.Information ausgelesen werden) und die Ausbreitung 
            der Markierung. Je größer die Ausbreitung, desto schneller verschwindet die 
            Markierung wieder.
            <see href="http://wiki.antme.net/de/API1:Spr%C3%BCheMarkierung">Weitere Infos</see>
            </summary>
            <param name="information">Information</param>
            <param name="größe">Größe der Markierung in Ameisenschritten</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.Denke(System.String)">
            <summary>
            Mit Hilfe dieses Befehls gibt die Ameise Denkblasen aus, die zur Fehlersuche 
            eingesetzt werden können.
            <see href="http://wiki.antme.net/de/API1:Denke">Weitere Infos</see>
            </summary>
            <param name="nachricht">Nachricht</param>
        </member>
        <member name="M:AntMe.Deutsch.Basisameise.BrauchtNochTräger(AntMe.Deutsch.Obst)">
            <summary>
            Ermittelt ob das angegebene Obst noch mehr Ameisen zum Tragen benötigt.
            <see href="http://wiki.antme.net/de/API1:BrauchtNochTr%C3%A4ger">Weitere Infos</see>
            </summary>
            <param name="obst">zu prüfendes Obst</param>
            <returns>Braucht noch Träger</returns>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.MaximaleEnergie">
            <summary>
            Gibt die maximale Energie der Ameise an. Die Einheit ist Lebenspunkte.
            <see href="http://wiki.antme.net/de/API1:MaximaleEnergie">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.MaximaleGeschwindigkeit">
            <summary>
            Gibt die maximale Geschwindigkeit der Ameise an. Die Einheit ist Schritte pro Runde.
            <see href="http://wiki.antme.net/de/API1:MaximaleGeschwindigkeit">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.MaximaleLast">
            <summary>
            Gibt die maximal tragbare Last der Ameise an. Die Einheit ist Nahrungspunkte. 
            Dieser Wert bestimmt, wie viel Zucker die Ameise auf einmal tragen kann und 
            wie schnell sie ohne die Hilfe anderer Ameisen einen Apfel tragen kann.
            <see href="http://wiki.antme.net/de/API1:MaximaleLast">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Reichweite">
            <summary>
            Gibt die Reichweite in Schritten an die die Ameise zurücklegen kann, bevor sie 
            vor Hunger stirbt. Nachdem die Ameise ein Drittel dieser Strecke zurückgelegt hat, 
            wird das Ereignis WirdMüde() aufgerufen und der Wert von IstMüde auf wahr gesetzt. 
            Siehe ZurückgelegteStrecke.
            <see href="http://wiki.antme.net/de/API1:Reichweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Angriff">
            <summary>
            Gibt den Angriffswert der Ameise an. Der Angriffswert bestimmt wie viele 
            Lebenspunkte die Ameise einem Gegner in jeder Runde abzieht. Die Einheit 
            ist Lebenspunkte.
            <see href="http://wiki.antme.net/de/API1:Angriff">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Sichtweite">
            <summary>
            Gibt den Wahrnehmungsradius der Ameise in Schritten an. Dieser Radius bestimmt 
            wie weit die Ameise von Spielelementen wie z.B. Zucker entfernt sein muss damit 
            die Ameise sie sieht. Die Blickrichtung der Ameise spielt dabei keine Rolle.
            <see href="http://wiki.antme.net/de/API1:Sichtweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Drehgeschwindigkeit">
            <summary>
            Gibt die Geschwindigkeit an mit der sich eine Ameise drehen kann. Die Einheit 
            ist Grad pro Runde.
            <see href="http://wiki.antme.net/de/API1:Drehgeschwindigkeit">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AktuelleEnergie">
            <summary>
            Gibt die aktuelle Energie der Ameise an. Die Einheit ist Lebenspunkte. Hat die 
            Ameise 0 Lebenspunkte oder weniger, dann stirbt sie. Dieser Wert ist immer 
            kleiner oder gleich MaximaleEnergie.
            <see href="http://wiki.antme.net/de/API1:AktuelleEnergie">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AktuelleGeschwindigkeit">
            <summary>
            Gibt die aktuell mögliche Geschwindigkeit der Ameise an. Die Einheit ist Schritte 
            pro Runde. Der Wert wird von der aktuellen Last der Ameise beeinflusst. Ameisen 
            die unter voller Last bewegt werden, können nur die Hälfte ihrer 
            Maximalgeschwindigkeit erreichen. Diese Eigenschaft liefert immer einen Wert 
            größer 0 zurück, auch wenn die Ameise still steht. Dieser Wert ist immer kleiner 
            oder gleich MaximaleGeschwindigkeit.
            <see href="http://wiki.antme.net/de/API1:AktuelleGeschwindigkeit">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AktuelleLast">
            <summary>
            Gibt die aktuelle Last an, die die Ameise gerade trägt. Die Einheit ist Nahrungspunkte. 
            Dieser Wert ist immer kleiner oder gleich MaximaleLast.
            <see href="http://wiki.antme.net/de/API1:AktuelleLast">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AnzahlAmeisenInSichtweite">
            <summary>
            Gibt die Anzahl der Ameisen desselben Volkes des im Wahrnehmungsradius der Ameise zurück. 
            Das Ergebnis dieser Berechnung ist von der Sichtweite der Ameise abhängig.
            <see href="http://wiki.antme.net/de/API1:AnzahlAmeisenInSichtweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AnzahlAmeisenDerSelbenKasteInSichtweite">
            <summary>
            Gibt die Anzahl der befreundeten Ameisen desselben Volkes und derselben Kaste im 
            Wahrnehmungsradius der Ameise zurück. Das Ergebnis dieser Berechnung ist von der 
            Sichtweite der Ameise abhängig.
            <see href="http://wiki.antme.net/de/API1:AnzahlAmeisenDerSelbenKasteInSichtweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AnzahlAmeisenDesTeamsInSichtweite">
            <summary>
            Gibt die Anzahl der befreundeten Ameisen desselben Teams im Wahrnehmungsradius der Ameise zurück. 
            Das Ergebnis dieser Berechnung ist von der Sichtweite der Ameise abhängig.
            <see href="http://wiki.antme.net/de/API1:AnzahlAmeisenDesTeamsInSichtweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.AnzahlFremderAmeisenInSichtweite">
            <summary>
            Gibt die Anzahl der feindlichen Ameisen im Wahrnehmungsradius der Ameise zurück. 
            Das Ergebnis dieser Berechnung ist von der Sichtweite der Ameise abhängig.
            <see href="http://wiki.antme.net/de/API1:AnzahlFremderAmeisenInSichtweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.WanzenInSichtweite">
            <summary>
            Gibt die Anzahl der Wanzen im Wahrnehmungsradius der Ameise zurück. Das Ergebnis 
            dieser Berechnung ist von der Sichtweite der Ameise abhängig.
            <see href="http://wiki.antme.net/de/API1:WanzenInSichtweite">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.EntfernungZuBau">
            <summary>
            Gibt die Entfernung in Schritten zum nächstgelegenen befreundeten Ameisenbau an.
            <see href="http://wiki.antme.net/de/API1:EntfernungZuBau">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.GetragenesObst">
            <summary>
            Gibt das aktuell getragene Obststück zurück. Wenn die Ameise gerade kein Obst 
            trägt, zeigt dieser Verweis ins Leere.
            <see href="http://wiki.antme.net/de/API1:GetragenesObst">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Kaste">
            <summary>
            Gibt des Namen der Kaste der Ameise zurück.
            <see href="http://wiki.antme.net/de/API1:Kaste">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Ziel">
            <summary>
            Gibt das aktuelle Ziel der Ameise zurück. Wenn die Ameise gerade 
            kein Ziel hat, zeigt dieser Verweis ins Leere.
            <see href="http://wiki.antme.net/de/API1:Ziel">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.IstMüde">
            <summary>
            Gibt an ob die Ameise müde ist. Die Ameise wird müde, sobald sie ein 
            Drittel ihrer maximalen Reichweite zurückgelegt hat. Nach dem Übergang 
            des Wertes dieser Eigenschaft von falsch auf wahr wird das Ereignis 
            WirdMüde() aufgerufen.
            <see href="http://wiki.antme.net/de/API1:IstM%C3%BCde">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.RestStrecke">
            <summary>
            Gibt an wie viele Schritte die Ameise noch geradeaus gehen wird, bevor 
            sie wieder ihr Ziel anvisiert. Dieser Wert wird in jeder Runde um 
            AktuelleGeschwindigkeit verringert.
            <see href="http://wiki.antme.net/de/API1:RestStrecke">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.RestWinkel">
            <summary>
            Gibt an wie viele Grad die Ameise sich noch drehen wird, bevor sie wieder 
            geradeaus gehen wird. Dieser Wert wird in jeder Runde um DrehGeschwindigkeit 
            verringert.
            <see href="http://wiki.antme.net/de/API1:RestWinkel">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Richtung">
            <summary>
            Gibt die Blickrichtung der Ameise in Grad auf dem Spielfeld an. 0 ist dabei 
            rechts (Osten) und der Winkel öffnet sich im Uhrzeigersinn. 90 ist daher 
            unten (Süden), 180 rechts (Westen) und 270 oben.
            <see href="http://wiki.antme.net/de/API1:Richtung">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.Angekommen">
            <summary>
            Gibt an ob die Ameise an ihrem Ziel angekommen ist.
            <see href="http://wiki.antme.net/de/API1:Angekommen">Weitere Infos</see>
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Basisameise.ZurückgelegteStrecke">
            <summary>
            Diese Eigenschaft gibt die Gesamtanzahl an Schritten zurück die die Ameise 
            seit ihrem letzten Besuch in einem Ameisenbau zurückgelegt hat. Siehe Reichweite
            <see href="http://wiki.antme.net/de/API1:Zur%C3%BCckgelegteStrecke">Weitere Infos</see>
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Bau">
            <summary>
            Repräsentiert einen Ameisenbau
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Bau.Id">
            <summary>
            Liefert die ID dieses Baus
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.DateizugriffAttribute">
            <summary>
            Attribut zur Anfrage von Dateizugriffen.
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.ZugriffAttribute">
            <summary>
            Attribut, um Zugriffsrechte anzufordern.
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.ZugriffAttribute.Beschreibung">
            <summary>
            Beschreibung zur Verwendung der erteilten Zugriffsrechte.
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.DatenbankzugriffAttribute">
            <summary>
            Attribut zur Anfrage von Zugriffen auf Datenbanken.
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.FensterzugriffAttribute">
            <summary>
            Attribut zur Anfrage von Zugriff auf Fensterelemente.
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.KasteAttribute">
            <summary>
            Attribut für die Beschreibung von verschiedenen Ameisenkasten
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.AngriffModifikator">
            <summary>
            Legt die Angriffsstärke der Ameise fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.DrehgeschwindigkeitModifikator">
            <summary>
            Legt die Drehgeschwindigkeit der Ameise fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.EnergieModifikator">
            <summary>
            Legt die Energie einer Ameise fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.GeschwindigkeitModifikator">
            <summary>
            Legt die Bewegungsgeschwindigkeit einer Ameise fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.LastModifikator">
            <summary>
            Legt die Belastbarkeit einer Ameise fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.Name">
            <summary>
            Legt den Namen der Ameisenkaste fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.ReichweiteModifikator">
            <summary>
            Legt die Reichweite einer Ameise fest
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.KasteAttribute.SichtweiteModifikator">
            <summary>
            Legt die Sichtweite einer Ameise fest
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Koordinate">
            <summary>
            Hilfsklasse für Entfernungs- und Richtungsberechnungen
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeEntfernung(AntMe.Deutsch.Spielobjekt,AntMe.Deutsch.Spielobjekt)">
            <summary>
            Bestimmt die Entfernung zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Schritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeEntfernung(AntMe.Simulation.CoreAnt,AntMe.Deutsch.Spielobjekt)">
            <summary>
            Bestimmt die Entfernung zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Schritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeEntfernung(AntMe.Deutsch.Spielobjekt,AntMe.Simulation.CoreAnt)">
            <summary>
            Bestimmt die Entfernung zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Schritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeEntfernung(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Bestimmt die Entfernung zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Schritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeRichtung(AntMe.Deutsch.Spielobjekt,AntMe.Deutsch.Spielobjekt)">
            <summary>
            Ermittelt den Richtungsunterscheid zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Gradschritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeRichtung(AntMe.Simulation.CoreAnt,AntMe.Deutsch.Spielobjekt)">
            <summary>
            Ermittelt den Richtungsunterscheid zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Gradschritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeRichtung(AntMe.Deutsch.Spielobjekt,AntMe.Simulation.CoreAnt)">
            <summary>
            Ermittelt den Richtungsunterscheid zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Gradschritten</returns>
        </member>
        <member name="M:AntMe.Deutsch.Koordinate.BestimmeRichtung(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Ermittelt den Richtungsunterscheid zwischen zwei Spielelementen
            </summary>
            <param name="objekt1">Element 1</param>
            <param name="objekt2">Element 2</param>
            <returns>Entfernung in Gradschritten</returns>
        </member>
        <member name="T:AntMe.Deutsch.Markierung">
            <summary>
            Repräsentiert eine Markierung
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Markierung.Id">
            <summary>
            Liefert die eindeutige ID dieser Markeriung
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Markierung.Information">
            <summary>
            Liefert die Information aus der Markierung
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Nahrung">
            <summary>
            Basisklasse für alle Nahrungsmittel auf dem Spielfeld
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Nahrung.Menge">
            <summary>
            Liefert die Menge an Nahrung
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Nahrung.Id">
            <summary>
            Liefer die ID dieser Nahrung
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.NamespaceDoc">
            <summary>
            Dieser Namespace enthält alle notwendigen Klassen und Attribute für die Erstellung einer Ameise in deutscher Sprache.
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.NetzwerkzugriffAttribute">
            <summary>
            Attribut zur Anfrage von Netzwerkzugriff.
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Obst">
            <summary>
            Repräsentiert einen Apfel
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.SpielerAttribute">
            <summary>
            Attribut für die spielerrelevanten Angaben zum Volk
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.SpielerAttribute.Volkname">
            <summary>
            Name des Volkes (Angabe erforderlich)
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.SpielerAttribute.Nachname">
            <summary>
            Nachname des Spielers
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.SpielerAttribute.Vorname">
            <summary>
            Vorname des Spielers
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Todesart">
            <summary>
            Liste möglicher Todesursachen
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.Todesart.Verhungert">
            <summary>
            Ameise verhungert
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.Todesart.Gefressen">
            <summary>
            Ameise wurde von Wanze gefressen
            </summary>
        </member>
        <member name="F:AntMe.Deutsch.Todesart.Besiegt">
            <summary>
            Ameise wurde von feindlichen Ameisen besiegt
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Volk">
            <summary>
            Repräsentant eines Volkes
            </summary>
        </member>
        <member name="P:AntMe.Deutsch.Volk.Name">
            <summary>
            Liefert den Namen des Volkes
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Wanze">
            <summary>
            Repräsentiert eine Wanze
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Zucker">
            <summary>
            Repräsentiert einen Zuckerberg
            </summary>
        </member>
        <member name="T:AntMe.Deutsch.Zufall">
            <summary>
            Hilfsklasse zur Generierung von Zufallszahlen
            </summary>
        </member>
        <member name="M:AntMe.Deutsch.Zufall.Zahl(System.Int32)">
            <summary>
            Generiert eine Zufallszahl zwischen 0 und dem angegebenen Maximum
            </summary>
            <param name="maximum">Maximum</param>
            <returns>Zufallszahl</returns>
        </member>
        <member name="M:AntMe.Deutsch.Zufall.Zahl(System.Int32,System.Int32)">
            <summary>
            Generiert eine Zufallszahl zwischen dem angegebenen Minimum und dem angegebenen Maximum
            </summary>
            <param name="minimum">Minumum</param>
            <param name="maximum">Maximum</param>
            <returns>Zufallszahl</returns>
        </member>
        <member name="T:AntMe.English.AccessAttribute">
            <summary>
            Baseattribute for all access-requesting attributes.
            </summary>
        </member>
        <member name="F:AntMe.English.AccessAttribute.Description">
            <summary>
            Short description of what the ant will do with the requested rights.
            </summary>
        </member>
        <member name="T:AntMe.English.Ant">
            <summary>
            Represents a foreign ant
            </summary>
        </member>
        <member name="T:AntMe.English.Insect">
            <summary>
            Its the interface for all lifeforms on playground
            </summary>
        </member>
        <member name="T:AntMe.English.Item">
            <summary>
            Baseclass for all items on playground
            </summary>
        </member>
        <member name="F:AntMe.English.Item.item">
            <summary>
            Saves the reference to the original simulation-object
            </summary>
        </member>
        <member name="M:AntMe.English.Item.GetHashCode">
            <summary>
            Delivers a unique code for that item
            </summary>
            <returns>unique Code</returns>
        </member>
        <member name="M:AntMe.English.Item.Equals(System.Object)">
            <summary>
            Vergleich zwischen zwei Objekten
            </summary>
            <param name="obj">Vergleichsobjekt</param>
            <returns>beide meinen das gleiche Element</returns>
        </member>
        <member name="M:AntMe.English.Item.op_Equality(AntMe.English.Item,AntMe.English.Item)">
            <summary>
            operator ==
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:AntMe.English.Item.op_Inequality(AntMe.English.Item,AntMe.English.Item)">
            <summary>
            operator !=
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:AntMe.English.Item.Baseitem">
            <summary>
            Delivers the base-item
            </summary>
        </member>
        <member name="P:AntMe.English.Item.Id">
            <summary>
            Gives the unique ID of this item
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.Id">
            <summary>
            Returns the unique ID of this insect
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.CurrentEnergy">
            <summary>
            Delivers the current energy of this ant
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.CurrentSpeed">
            <summary>
            Delivers the current speed
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.AttackStrength">
            <summary>
            Delivers the strength
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.RotationSpeed">
            <summary>
            Delivers the rotationspeed
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.MaximumEnergy">
            <summary>
            delivers the maximum energy
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.MaximumSpeed">
            <summary>
            delivers the maximum speed
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.Viewrange">
            <summary>
            delivers the viewrange
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.DegreesToTarget">
            <summary>
            delivers the degrees to rotate
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.Direction">
            <summary>
            delivers the direction
            </summary>
        </member>
        <member name="P:AntMe.English.Insect.DistanceToTarget">
            <summary>
            delivers the distance to go
            </summary>
        </member>
        <member name="P:AntMe.English.Ant.CurrentLoad">
            <summary>
            Delivers the current load of this ant.
            </summary>
        </member>
        <member name="P:AntMe.English.Ant.CarriedFruit">
            <summary>
            delivers the current carried fruit.
            </summary>
        </member>
        <member name="P:AntMe.English.Ant.MaximumLoad">
            <summary>
            Delivers the maximum load.
            </summary>
        </member>
        <member name="P:AntMe.English.Ant.Range">
            <summary>
            Delivers the range.
            </summary>
        </member>
        <member name="P:AntMe.English.Ant.Colony">
            <summary>
            Delivers the Colony-Name.
            </summary>
        </member>
        <member name="T:AntMe.English.Anthill">
            <summary>
            Represents an anthill
            </summary>
        </member>
        <member name="P:AntMe.English.Anthill.Id">
            <summary>
            Delivers the unique ID of this anthill
            </summary>
        </member>
        <member name="T:AntMe.English.BaseAnt">
            <summary>
            Baseclass for implementing english Ants.
            <see href="http://wiki.antme.net/en/Ant_Development">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.ChooseCaste(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Every time that a new ant is born, its job group must be set. You can do 
            so with the help of the value returned by this method.
            <see href="http://wiki.antme.net/en/API1:ChooseCaste">Read more</see>
            </summary>
            <param name="typeCount">Number of ants for every caste</param>
            <returns>Caste-Name for the next ant</returns>
        </member>
        <member name="M:AntMe.English.BaseAnt.HasDied(AntMe.English.KindOfDeath)">
            <summary>
            This method is called if an ant dies. It informs you that the ant has 
            died. The ant cannot undertake any more actions from that point forward.
            <see href="http://wiki.antme.net/en/API1:HasDied">Read more</see>
            </summary>
            <param name="kindOfDeath">Kind of Death</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.DetectedScentFriend(AntMe.English.Marker)">
            <summary>
            Friendly ants can detect markers left by other ants. This method is 
            called when an ant smells a friendly marker for the first time.
            <see href="http://wiki.antme.net/en/API1:DetectedScentFriend(Marker)">Read more</see>
            </summary>
            <param name="marker">Marker</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Spots(AntMe.English.Fruit)">
            <summary>
            This method is called as soon as an ant sees an apple within its 
            360° visual range. The parameter is the piece of fruit that the 
            ant has spotted.
            <see href="http://wiki.antme.net/en/API1:Spots(Fruit)">Read more</see>
            </summary>
            <param name="fruit">spotted fruit</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Spots(AntMe.English.Sugar)">
            <summary>
            This method is called as soon as an ant sees a mound of sugar in 
            its 360° visual range. The parameter is the mound of sugar that 
            the ant has spotted.
            <see href="http://wiki.antme.net/en/API1:Spots(Sugar)">Read more</see>
            </summary>
            <param name="sugar">spotted sugar</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.SpotsEnemy(AntMe.English.Ant)">
            <summary>
            Just as ants can see various types of food, they can also visually 
            detect other game elements. This method is called if the ant detects 
            an ant from an enemy colony.
            <see href="http://wiki.antme.net/en/API1:SpotsEnemy(Ant)">Read more</see>
            </summary>
            <param name="ant">spotted ant</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.SpotsEnemy(AntMe.English.Bug)">
            <summary>
            Just as ants can see various types of food, they can also visually 
            detect other game elements. This method is called if the ant sees 
            a bug.
            <see href="http://wiki.antme.net/en/API1:SpotsEnemy(Bug)">Read more</see>
            </summary>
            <param name="bug">spotted bug</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.SpotsFriend(AntMe.English.Ant)">
            <summary>
            Just as ants can see various types of food, they can also visually 
            detect other game elements. This method is called if the ant sees an 
            ant from the same colony.
            <see href="http://wiki.antme.net/en/API1:SpotsFriend(Ant)">Read more</see>
            </summary>
            <param name="ant">spotted ant</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.SpotsTeammate(AntMe.English.Ant)">
            <summary>
            Just as ants can see various types of food, they can also visually 
            detect other game elements. This method is called if the ant detects 
            an ant from a friendly colony (an ant on the same team).
            <see href="http://wiki.antme.net/en/API1:SpotsTeammate(Ant)">Read more</see>
            </summary>
            <param name="ant">spotted ant</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Tick">
            <summary>
            This method is called in every simulation round, regardless of additional 
            conditions. It is ideal for actions that must be executed but that are not 
            addressed by other methods.
            <see href="http://wiki.antme.net/en/API1:Tick">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.Waiting">
            <summary>
            If the ant has no assigned tasks, it waits for new tasks. This method 
            is called to inform you that it is waiting.
            <see href="http://wiki.antme.net/en/API1:Waiting">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.UnderAttack(AntMe.English.Ant)">
            <summary>
            Enemy creatures may actively attack the ant. This method is called if an 
            enemy ant attacks. the ant can then decide how to react.
            <see href="http://wiki.antme.net/en/API1:UnderAttack(Ant)">Read more</see>
            </summary>
            <param name="ant">attacking ant</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.UnderAttack(AntMe.English.Bug)">
            <summary>
            Enemy creatures may actively attack the ant. This method is called if a 
            bug attacks. the ant can decide how to react.
            <see href="http://wiki.antme.net/en/API1:UnderAttack(Bug)">Read more</see>
            </summary>
            <param name="bug">attacking bug</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.GettingTired">
            <summary>
            This method is called when an ant has travelled one third of its movement range.
            <see href="http://wiki.antme.net/en/API1:GettingTired">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.DestinationReached(AntMe.English.Fruit)">
            <summary>
            If the ant’s destination is a piece of fruit, this method is called as soon 
            as the ant reaches its destination. It means that the ant is now near enough 
            to its destination/target to interact with it.
            <see href="http://wiki.antme.net/en/API1:DestinationReached(Fruit)">Read more</see>
            </summary>
            <param name="fruit">reached fruit</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.DestinationReached(AntMe.English.Sugar)">
            <summary>
            If the ant’s destination is a mound of sugar, this method is called as soon 
            as the ant has reached its destination. It means that the ant is now near 
            enough to its destination/target to interact with it.
            <see href="http://wiki.antme.net/en/API1:DestinationReached(Sugar)">Read more</see>
            </summary>
            <param name="sugar">reached sugar</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.TurnToDirection(System.Int32)">
            <summary>
            The ant turns in the specified direction. The angle around which it 
            turns is determined automatically.
            <see href="http://wiki.antme.net/en/API1:TurnToDirection">Read more</see>
            </summary>
            <param name="direction">direction</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.TurnByDegrees(System.Int32)">
            <summary>
            The ant turns itself around the specified angle. Positive values turn 
            the ant to the right, negative values turn it to the left.
            <see href="http://wiki.antme.net/en/API1:TurnByDegrees">Read more</see>
            </summary>
            <param name="degrees">degrees</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.TurnAround">
            <summary>
            The ant turns 180 degrees in the opposite direction. Has the same effect
            as TurnByDegrees(180).
            <see href="http://wiki.antme.net/en/API1:TurnAround">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.TurnToDetination(AntMe.English.Item)">
            <summary>
            The ant turns in the direction of the specified destination.
            <see href="http://wiki.antme.net/en/API1:TurnToDestination">Read more</see>
            </summary>
            <param name="destination">item</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Stop">
            <summary>
            The ant stands still and forgets its current destination. In the next 
            round the result of Waiting() is called.
            <see href="http://wiki.antme.net/en/API1:Stop">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.GoForward">
            <summary>
            The ant moves forward. The ant’s destination remains unaltered. If a 
            value is specified, the ant will aim for its destination again as soon 
            as it has travelled the specified distance.
            <see href="http://wiki.antme.net/en/API1:GoForward">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.GoForward(System.Int32)">
            <summary>
            The ant moves forward. The ant’s destination remains unaltered. If a 
            value is specified, the ant will aim for its destination again as soon 
            as it has travelled the specified distance.
            <see href="http://wiki.antme.net/en/API1:GoForward">Read more</see>
            </summary>
            <param name="steps">steps</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.GoAwayFrom(AntMe.English.Item)">
            <summary>
            The ant turns in the direction opposite the specified destination and 
            then walks straight ahead. The ant’s destination remains unaltered and 
            the walking distance can be specified.
            <see href="http://wiki.antme.net/en/API1:GoAwayFrom">Read more</see>
            </summary>
            <param name="item">item</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.GoAwayFrom(AntMe.English.Item,System.Int32)">
            <summary>
            The ant turns in the direction opposite the specified destination and 
            then walks straight ahead. The ant’s destination remains unaltered and 
            the walking distance can be specified.
            <see href="http://wiki.antme.net/en/API1:GoAwayFrom">Read more</see>
            </summary>
            <param name="item">item</param>
            <param name="steps">steps</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.GoToDestination(AntMe.English.Item)">
            <summary>
            The ant saves the specified destination and walks to it.
            <see href="http://wiki.antme.net/en/API1:GoToDestination">Read more</see>
            </summary>
            <param name="destination">destination</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.GoToAnthill">
            <summary>
            The ant saves the nearest anthill as its destination and walks towards it.
            <see href="http://wiki.antme.net/en/API1:GoToAnthill">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.Attack(AntMe.English.Insect)">
            <summary>
            The ant saves the specified bug or the specified enemy ant as its 
            destination and walks toward it. When the ant arrives at its destination, 
            it begins to fight.
            <see href="http://wiki.antme.net/en/API1:Attack">Read more</see>
            </summary>
            <param name="target">target</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Take(AntMe.English.Food)">
            <summary>
            The ant picks up the specified food. In the case of a mound of sugar, 
            it takes as much as possible until it reaches its maximum load (see 
            CurrentLoad and MaximumLoad). In the case of a piece of fruit, the ant 
            begins carrying the fruit (see CarryingFruit).
            <see href="http://wiki.antme.net/en/API1:Take">Read more</see>
            </summary>
            <param name="food">food</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Drop">
            <summary>
            The ant drops the food that it is currently carrying. Sugar is lost while 
            apples remain where they fall and can be picked up again later. The command 
            is not necessary when delivering food to an anthill—that occurs automatically.
            <see href="http://wiki.antme.net/en/API1:Drop">Read more</see>
            </summary>
        </member>
        <member name="M:AntMe.English.BaseAnt.MakeMark(System.Int32)">
            <summary>
            The ant sprays a scent marker at the current location. The possible 
            parameters are data contained in the marker (these can be read out of the 
            result of Spots(Marker) via marker.Information) and how far the maker 
            spreads out. The farther the marker spreads out, the faster it will disappear.
            <see href="http://wiki.antme.net/en/API1:MakeMark">Read more</see>
            </summary>
            <param name="information">information</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.MakeMark(System.Int32,System.Int32)">
            <summary>
            The ant sprays a scent marker at the current location. The possible parameters 
            are data contained in the marker (these can be read out of the result of 
            Spots(Marker) via marker.Information) and how far the maker spreads out. 
            The farther the marker spreads out, the faster it will disappear.
            <see href="http://wiki.antme.net/en/API1:MakeMark">Read more</see>
            </summary>
            <param name="information">information</param>
            <param name="range">range</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.Think(System.String)">
            <summary>
            This command causes the ant to display thought bubbles that can be used for 
            troubleshooting and debugging.
            <see href="http://wiki.antme.net/en/API1:Think">Read more</see>
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:AntMe.English.BaseAnt.NeedsCarrier(AntMe.English.Fruit)">
            <summary>
            Evaluates if the specified fruit needs more ants to carry it.
            <see href="http://wiki.antme.net/en/API1:NeedsCarrier">Read more</see>
            </summary>
            <param name="fruit">fruit</param>
            <returns>more ants required</returns>
        </member>
        <member name="P:AntMe.English.BaseAnt.MaximumEnergy">
            <summary>
            Returns the ant’s maximum energy. The unit is hit points.
            <see href="http://wiki.antme.net/en/API1:MaximumEnergy">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.MaximumSpeed">
            <summary>
            Returns the ant’s maximum speed. The unit is steps per round.
            <see href="http://wiki.antme.net/en/API1:MaximumSpeed">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.MaximumLoad">
            <summary>
            Returns the maximum load that the ant can bear. The unit is food points. 
            This value determines how much sugar the ant can carry at once and how 
            fast it can carry an apple without the help of other ants.
            <see href="http://wiki.antme.net/en/API1:MaximumLoad">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.Range">
            <summary>
            Specifies the distance in steps that the ant can travel before it dies of 
            hunger. After the ant has travelled a third of the value, the event 
            GettingTired() is called and the value of IsTired is set to "true". (See WalkedRange).
            <see href="http://wiki.antme.net/en/API1:Range">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.Strength">
            <summary>
            Specifies the ant’s attack value. The attack value determines how 
            many hit points the ant deducts from an enemy in each round. The 
            unit is hit points.
            <see href="http://wiki.antme.net/en/API1:Strength">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.Viewrange">
            <summary>
            Specifies the ant’s visual range in steps. This range determines how 
            far the ant must be from game elements like sugar in order for the ant 
            to see them. The direction that the ant is facing does not play a role 
            (ants have 360 vision in this game).
            <see href="http://wiki.antme.net/en/API1:Viewrange">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.RotationSpeed">
            <summary>
            Specifies the speed with which an ant can turn. The unit is degrees per 
            round.
            <see href="http://wiki.antme.net/en/API1:RotationSpeed">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.CurrentEnergy">
            <summary>
            Returns the ant’s current energy. The unit is hit points. If an ant has 0 
            hit points or fewer, it dies. This value is always less than or equal to 
            MaximumEnergy.
            <see href="http://wiki.antme.net/en/API1:CurrentEnergy">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.CurrentSpeed">
            <summary>
            Returns the ant’s current possible speed. The unit is steps per round. The 
            value is influenced by the ant’s current load. Ants that are carrying a full 
            load can only travel at half of their maximum speed. The property always 
            returns a value greater than 0, even if the ant is standing still. This value 
            is always less than or equal to MaximumSpeed.
            <see href="http://wiki.antme.net/en/API1:CurrentSpeed">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.CurrentLoad">
            <summary>
            Returns the weight of the load that the ant is currently carrying. The unit 
            is food points. This value is always smaller than or equal to MaximumLoad.
            <see href="http://wiki.antme.net/en/API1:CurrentLoad">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.FriendlyAntsInViewrange">
            <summary>
            Returns the number of friendly ants from the same colony in the ant’s 360° visual 
            range. The result of the calculation depends on the ant’s visual range.
            <see href="http://wiki.antme.net/en/API1:FriendlyAntsInViewrange">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.FriendlyAntsFromSameCasteInViewrange">
            <summary>
            Returns the number of friendly ants from the same colony and the same caste in 
            the ant’s 360° visual range. The result of this calculation depends on the ant’s 
            visual range.
            <see href="http://wiki.antme.net/en/API1:FriendlyAntsFromSameCasteInViewrange">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.TeamAntsInViewrange">
            <summary>
            Returns the number of friendly ants from the same team in the ant’s 360° visual 
            range. The result of this calculation depends on the ant’s visual range.
            <see href="http://wiki.antme.net/en/API1:TeamAntsInViewrange">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.ForeignAntsInViewrange">
            <summary>
            Returns the number of enemy ants in the ant’s 360° visual range. The result of 
            this calculation depends on the ant’s visual range.
            <see href="http://wiki.antme.net/en/API1:ForeignAntsInViewrange">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.BugsInViewrange">
            <summary>
            Returns the number of bugs in the ant’s 360° visual range. The result of this 
            calculation depends on the ant’s visual range.
            <see href="http://wiki.antme.net/en/API1:BugsInViewrange">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.DistanceToAnthill">
            <summary>
            Returns the distance in steps to the nearest friendly anthill.
            <see href="http://wiki.antme.net/en/API1:DistanceToAnthill">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.CarryingFruit">
            <summary>
            Returns the piece of fruit the ant is currently carrying. If the ant is not 
            carrying a piece of fruit, the value returned is null.
            <see href="http://wiki.antme.net/en/API1:CarryingFruit">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.Caste">
            <summary>
            Returns the name of the ant's caste.
            <see href="http://wiki.antme.net/en/API1:Caste">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.Destination">
            <summary>
            Returns the ant's current destination. If the ant currently has no 
            destination, the value returned is null.
            <see href="http://wiki.antme.net/en/API1:Destination">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.IsTired">
            <summary>
            Returns whether the ant is tired. The ant becomes tired as soon 
            as it has travelled a third of its maximum range. Once this value 
            has been exceeded, this property changes from false to true and 
            the event GettingTired() is called.
            <see href="http://wiki.antme.net/en/API1:IsTired">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.DistanceToDestination">
            <summary>
            Returns how many steps forward the ant must go before it reaches 
            its destination. This value is reduced each round by CurrentSpeed.
            <see href="http://wiki.antme.net/en/API1:DistanceToDestination">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.DegreesToDestination">
            <summary>
            Returns how many degrees the ant still has to turn before it moves 
            forward again. This value is reduced each round by RotationSpeed.
            <see href="http://wiki.antme.net/en/API1:DegreesToDestination">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.Direction">
            <summary>
            Returns the direction that the ant is facing on the map.
            <see href="http://wiki.antme.net/en/API1:Direction">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.ReachedDestination">
            <summary>
            Returns whether the ant has reached its destination or not.
            <see href="http://wiki.antme.net/en/API1:ReachedDestination">Read more</see>
            </summary>
        </member>
        <member name="P:AntMe.English.BaseAnt.WalkedRange">
            <summary>
            This property returns the total number of steps that the ant has 
            travelled since its last visit to an anthill. See Range.
            <see href="http://wiki.antme.net/en/API1:WalkedRange">Read more</see>
            </summary>
        </member>
        <member name="T:AntMe.English.Bug">
            <summary>
            Represents a bug
            </summary>
        </member>
        <member name="T:AntMe.English.CasteAttribute">
            <summary>
            Attribute to descripe the different professions of ants
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.AttackModifier">
            <summary>
            The Attackstrength
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.EnergyModifier">
            <summary>
            Hitpoints
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.LoadModifier">
            <summary>
            Load
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.RangeModifier">
            <summary>
            range
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.RotationSpeedModifier">
            <summary>
            Rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.SpeedModifier">
            <summary>
            Spped
            </summary>
        </member>
        <member name="F:AntMe.English.CasteAttribute.ViewRangeModifier">
            <summary>
            viewrange
            </summary>
        </member>
        <member name="T:AntMe.English.Coordinate">
            <summary>
            Helper-class to calculate with distances and angles
            </summary>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDistanceBetween(AntMe.English.Item,AntMe.English.Item)">
            <summary>
            Gives the distance between the to given objects
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>Distance between</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDistanceBetween(AntMe.Simulation.CoreAnt,AntMe.English.Item)">
            <summary>
            Gives the distance between the to given objects
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>Distance between</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDistanceBetween(AntMe.English.Item,AntMe.Simulation.CoreAnt)">
            <summary>
            Gives the distance between the to given objects
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>Distance between</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDistanceBetween(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Gives the distance between the to given objects
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>Distance between</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDegreesBetween(AntMe.English.Item,AntMe.English.Item)">
            <summary>
            Gives the direction from object 1 to object 2
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>direction</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDegreesBetween(AntMe.Simulation.CoreAnt,AntMe.English.Item)">
            <summary>
            Gives the direction from object 1 to object 2
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>direction</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDegreesBetween(AntMe.English.Item,AntMe.Simulation.CoreAnt)">
            <summary>
            Gives the direction from object 1 to object 2
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>direction</returns>
        </member>
        <member name="M:AntMe.English.Coordinate.GetDegreesBetween(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Gives the direction from object 1 to object 2
            </summary>
            <param name="a">object 1</param>
            <param name="b">object 2</param>
            <returns>direction</returns>
        </member>
        <member name="T:AntMe.English.Colony">
            <summary>
            Represents the Colony
            </summary>
        </member>
        <member name="P:AntMe.English.Colony.Name">
            <summary>
            Delivers the Name of that colony
            </summary>
        </member>
        <member name="T:AntMe.English.DatabaseAccessAttribute">
            <summary>
            Attribute to request access to database.
            </summary>
        </member>
        <member name="T:AntMe.English.FileAccessAttribute">
            <summary>
            Attribute to request fileaccess.
            </summary>
        </member>
        <member name="T:AntMe.English.Food">
            <summary>
            Its the interface for all kind of food
            </summary>
        </member>
        <member name="P:AntMe.English.Food.Amount">
            <summary>
            Returns the amount of food
            </summary>
        </member>
        <member name="P:AntMe.English.Food.Id">
            <summary>
            Delivers the unique Id of this food
            </summary>
        </member>
        <member name="T:AntMe.English.Fruit">
            <summary>
            Represents Fruit
            </summary>
        </member>
        <member name="T:AntMe.English.KindOfDeath">
            <summary>
            List of possible kinds of death
            </summary>
        </member>
        <member name="F:AntMe.English.KindOfDeath.Starved">
            <summary>
            The ant was running out of food
            </summary>
        </member>
        <member name="F:AntMe.English.KindOfDeath.Eaten">
            <summary>
            The ant was eaten up by a bug
            </summary>
        </member>
        <member name="F:AntMe.English.KindOfDeath.Beaten">
            <summary>
            The ant was killed by a foreign ant
            </summary>
        </member>
        <member name="T:AntMe.English.Marker">
            <summary>
            Represents a marker
            </summary>
        </member>
        <member name="P:AntMe.English.Marker.Information">
            <summary>
            Gives the information saved in that mark
            </summary>
        </member>
        <member name="P:AntMe.English.Marker.Id">
            <summary>
            Delivers the unique ID of this marker
            </summary>
        </member>
        <member name="T:AntMe.English.NamespaceDoc">
            <summary>
            Namespace Doc für English
            </summary>
        </member>
        <member name="T:AntMe.English.NetworkAccessAttribute">
            <summary>
            Attribute to request access to network.
            </summary>
        </member>
        <member name="T:AntMe.English.PlayerAttribute">
            <summary>
            Attribute to descripe an ant
            </summary>
        </member>
        <member name="F:AntMe.English.PlayerAttribute.FirstName">
            <summary>
            First name of the player
            </summary>
        </member>
        <member name="F:AntMe.English.PlayerAttribute.ColonyName">
            <summary>
            Name of the colony
            </summary>
        </member>
        <member name="F:AntMe.English.PlayerAttribute.LastName">
            <summary>
            Last name of the player
            </summary>
        </member>
        <member name="T:AntMe.English.RandomNumber">
            <summary>
            Helper-class to generate some random numbers
            </summary>
        </member>
        <member name="M:AntMe.English.RandomNumber.Number(System.Int32)">
            <summary>
            Gives a random number between 0 and the given maximum
            </summary>
            <param name="maximum">maximum</param>
            <returns>random number</returns>
        </member>
        <member name="M:AntMe.English.RandomNumber.Number(System.Int32,System.Int32)">
            <summary>
            Gives a random number between the given minimum and the given maximum
            </summary>
            <param name="minimum">minimum</param>
            <param name="maximum">maximum</param>
            <returns>random number</returns>
        </member>
        <member name="T:AntMe.English.Sugar">
            <summary>
            Represents a sugarhill
            </summary>
        </member>
        <member name="T:AntMe.English.UserinterfaceAccessAttribute">
            <summary>
            Attribute to request access to the userinterface.
            </summary>
        </member>
        <member name="T:AntMe.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AntMe.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AntMe.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AntMe.Resource.SettingsDefaultName">
            <summary>
              Looks up a localized string similar to Standard.
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisCheatWithFxFake">
            <summary>
              Looks up a localized string similar to Attempt to cheat with a fake Framework assembly..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisForeignRefInfotext">
            <summary>
              Looks up a localized string similar to External reference:.
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisNewerVersion">
            <summary>
              Looks up a localized string similar to This ant was likely created with a newer version of AntMe!..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisNoClassFound">
            <summary>
              Looks up a localized string similar to The file does not contain a class with this name..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisNoPlayerAttribute">
            <summary>
              Looks up a localized string similar to The ant class that was found ({0}) is not decorated with a PlayerAttribute..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisNotSupportedAntVersion">
            <summary>
              Looks up a localized string similar to Ants of version 1.1 or lower are not supported in this version anymore..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisOldAssemblyLoadFailed">
            <summary>
              Looks up a localized string similar to Attempting to load an earlier ant simulation core (version: {0}) failed..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisTooManyPlayerAttributes">
            <summary>
              Looks up a localized string similar to The ant class {0} containas more than one PlayerAttribute..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisUnknownReferenceLoadFailed">
            <summary>
              Looks up a localized string similar to The external reference &apos;{0}&apos; could not be loaded..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreAnalysisUnknownVersion">
            <summary>
              Looks up a localized string similar to The ant could not be assigned a version. {0}.
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleAttackFailed">
            <summary>
              Looks up a localized string similar to The attack-modificator of caste {0} of ant {1} is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleEnergyFailed">
            <summary>
              Looks up a localized string similar to The energy-modificator of caste {0} of ant {1} is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleLoadFailed">
            <summary>
              Looks up a localized string similar to The load-modificator of caste {0} of ant {1} is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleNoName">
            <summary>
              Looks up a localized string similar to The caste-attribute of ant {0} does not contain a name..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleRangeFailed">
            <summary>
              Looks up a localized string similar to The reach-modificator of caste {0} of ant {1} is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleRotationSpeedFailed">
            <summary>
              Looks up a localized string similar to The rotationspeed-modificator of caste {0} of ant {1}is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleSpeedFailed">
            <summary>
              Looks up a localized string similar to The speed-modificator of caste {0} of ant {1} is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleSumFailed">
            <summary>
              Looks up a localized string similar to The sum of modificators of caste {0} of player {1} are invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreCasteRuleViewRangeFailed">
            <summary>
              Looks up a localized string similar to The viewrange-modificator of caste {0} of ant {1} is invalid..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreChooseWrongCaste">
            <summary>
              Looks up a localized string similar to The desired caste for the new ant &apos;{0}&apos; doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationLoopCountTooBig">
            <summary>
              Looks up a localized string similar to The loop count cannot be greater than {0}..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationLoopCountTooSmall">
            <summary>
              Looks up a localized string similar to The minimum loop count is 1..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationLoopTimeoutTooSmall">
            <summary>
              Looks up a localized string similar to The timeout value for a loop cannot be less than 1..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationNoTeams">
            <summary>
              Looks up a localized string similar to At least one team must be selected for the simulation..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationRoundCountTooBig">
            <summary>
              Looks up a localized string similar to The round count must not exceed {0}..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationRoundCountTooSmall">
            <summary>
              Looks up a localized string similar to The minimum round count is 1..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreConfigurationRoundTimeoutTooSmall">
            <summary>
              Looks up a localized string similar to The timeout value for a round cannot be less than 1..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreFactoryConfigIsNull">
            <summary>
              Looks up a localized string similar to The parameter configuration must not be null..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreHostEnvironmentNotInit">
            <summary>
              Looks up a localized string similar to The environment has not yet been initialized..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreHostRoundTimeout">
            <summary>
              Looks up a localized string similar to The timeout for a round has been exceeded..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreHostWrongPlayerInfo">
            <summary>
              Looks up a localized string similar to The configuration may only contain PlayerInfoFileName or PlayerInfoFileDump..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreNegativeMarkerSize">
            <summary>
              Looks up a localized string similar to It&apos;s not possible to create marker with size smaller than 0.
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCorePlayerRuleNoName">
            <summary>
              Looks up a localized string similar to The PlayerAttribute of class {0} does not contain a name..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreProxyUnloaded">
            <summary>
              Looks up a localized string similar to The simulation has already been unloaded..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreProxyWrongPlayerInfo">
            <summary>
              Looks up a localized string similar to The configuration may only contain PlayerInfoFileName or PlayerInfoFileDump..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreRightsConflictDb">
            <summary>
              Looks up a localized string similar to There are no rights to grand database-access to various colonies..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreRightsConflictIo">
            <summary>
              Looks up a localized string similar to There are no rights to grand file-access to various colonies..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreRightsConflictNet">
            <summary>
              Looks up a localized string similar to There are no rights to grand network-access to various colonies..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreRightsConflictUi">
            <summary>
              Looks up a localized string similar to There are no rights to grand userinterface-access to various colonies..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreSettingsCasteColumnToBig">
            <summary>
              Looks up a localized string similar to The index of the caste column is too large..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreSettingsCasteColumnToSmall">
            <summary>
              Looks up a localized string similar to The index of the caste column is too small..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreSimulatorRestartFailed">
            <summary>
              Looks up a localized string similar to Cannot call Step() on a simulation that has already completed..
            </summary>
        </member>
        <member name="P:AntMe.Resource.SimulationCoreTeamInfoNoName">
            <summary>
              Looks up a localized string similar to The list of players of a team may not be empty..
            </summary>
        </member>
        <member name="T:AntMe.Simulation.AiException">
            <summary>
            Exception for implementation-Problems in player-ai-files.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.AiException.#ctor">
            <summary>
            KOnstruktor der Regelverletzung ohne weitere Angaben
            </summary>
        </member>
        <member name="M:AntMe.Simulation.AiException.#ctor(System.String)">
            <summary>
            Konsruktor der Regelverletzung mit der Übergabe einer Beschreibung zur Verletzung
            </summary>
            <param name="message">Beschreibung der Regelverletzung</param>
        </member>
        <member name="M:AntMe.Simulation.AiException.#ctor(System.String,System.Exception)">
            <summary>
            Konstruktor zur Regelverletung mit übergabe einer Nachricht sowie einer verursachenden Exception
            </summary>
            <param name="message">Beschreibung zum Problem</param>
            <param name="innerException">Verursachende Exception</param>
        </member>
        <member name="M:AntMe.Simulation.AiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Konstruktor für die Serialisierung dieser Exception
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:AntMe.Simulation.CasteInfo">
            <summary>
            Holds the caste-information.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.Attack">
            <summary>
            Der Angriffmodifikator der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.RotationSpeed">
            <summary>
            Der Drehgeschwindigkeitmodifikator der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.Energy">
            <summary>
            Der Energiemodifikator der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.Speed">
            <summary>
            Der Geschwindigkeitmodifikator der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.Load">
            <summary>
            Der Lastmodifikator der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.Name">
            <summary>
            Der Name der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.Range">
            <summary>
            Der Reichweitenmodifikator der Kaste.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CasteInfo.ViewRange">
            <summary>
            Der Sichtweitenmodifikator der Kaste.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CasteInfo.Rulecheck(System.String)">
            <summary>
            Prüft, ob diese Ameisenkaste den Regeln entspricht
            </summary>
            <throws>RuleViolationException</throws>
        </member>
        <member name="M:AntMe.Simulation.CasteInfo.IsEmpty">
            <summary>
            Gibt an, ob es sich bei dieser Ameisenkaste um die Standard-Kaste handelt
            </summary>
            <returns>Standardwert</returns>
        </member>
        <member name="M:AntMe.Simulation.CasteInfo.CreateState(System.Int32,System.Int32)">
            <summary>
            Erzeugt ein CasteState-Objekt.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AntMe.Simulation.AnalysisHost">
            <summary>
            Host-Class for Ai-Analysis to host the analyze-core inside application-domains.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.AnalysisHost.coreAnt">
            <summary>
            Type of baseAnt from core.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.AnalysisHost.exception">
            <summary>
            Holds all thrown exceptions.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.AnalysisHost.languageBases">
            <summary>
            List of all Ant-BaseClasses in every known language.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.AnalysisHost.InitSettings(AntMe.Simulation.SimulationSettings)">
            <summary>
            Sets special simulation-settings.
            </summary>
            <param name="settings">special settings</param>
        </member>
        <member name="M:AntMe.Simulation.AnalysisHost.Analyse(System.Byte[],System.Boolean)">
            <summary>
            Searches in the given file for possible PlayerInfos and delivers a list of found Players.
            </summary>
            <param name="file">Ai-File as binary file-dump.</param>
            <param name="checkRules">True, if Analyzer should also check player-rules</param>
            <returns>List of found players.</returns>
        </member>
        <member name="M:AntMe.Simulation.AnalysisHost.analyseAssembly(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Analyzes the given for any kind of valid player-information.
            </summary>
            <param name="assembly">given assembly.</param>
            <param name="checkRules">true, if the Analyser should also check player-rules</param>
            <returns>List of valid players.</returns>
        </member>
        <member name="P:AntMe.Simulation.AnalysisHost.Exception">
            <summary>
            List of thrown Exceptions.s
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreAnthill">
            <summary>
            Ein Bau eines Ameisenvolkes.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="F:AntMe.Simulation.CoreAnthill.Id">
            <summary>
            Die Id die den Bau während eines Spiels eindeutig identifiziert.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreAnthill.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Bau-Klasse.
            <param name="x">X-Koordinate</param>
            <param name="y">Y.Koordinate</param>
            <param name="radius">Radius</param>
            <param name="colonyId">Volk ID</param>
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreAnthill.ErzeugeInfo">
            <summary>
            Erzeugt ein BauZustand-Objekt mit den aktuellen Daten des Bau.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreAnthill.CoordinateBase">
            <summary>
            Die Position des Bau auf dem Spielfeld.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.Grid`1">
            <summary>
            Implementiert ein Zellrasterverfahren zum schnellen Auffinden von
            Spielelementen auf dem Spielfeld.
            </summary>
            <remarks>
            Ein Spielelement wird unabhängig von seinem Radius in genau eine Zelle
            einsortiert. Spielelemente "zwei Zellen weiter" werden daher auch dann
            nicht gefunden, wenn sie (durch ihren Radius) eigentlich nahe genug
            am Referenzelement liegen.
            </remarks>
            <typeparam name="T">Typ der Spielelemente.</typeparam>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.Create(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt ein Gitter mit den angegebenen Maßen oder gibt ein vorhandenes
            Gitter mit diesem Maßen zurück.
            </summary>
            <param name="width">Breite des Gitters.</param>
            <param name="height">Höhe des Gitters.</param>
            <param name="sideLength">Seitenlänge einer Gitterzelle. Bestimmt die
            maximale Entfernung bis zu der ein Spielelement ein anderes sehen kann.</param>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.#ctor(AntMe.Simulation.Grid{`0}.GridSize)">
            <summary>
            Erzeugt eine neue Instanz der Klasse.
            </summary>
            <param name="size">Die Maße des Gitters.</param>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt einen neue Instanz der Klasse.
            </summary>
            <param name="width">Breite des Gitters.</param>
            <param name="height">Höhe des Gitters.</param>
            <param name="sideLength">Seitenlänge einer Gitterzelle. Bestimmt die
            maximale Entfernung bis zu der ein Spielelement ein anderes sehen kann.</param>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.Add(System.Collections.Generic.List{`0})">
            <summary>
            Fügt dem Gitter mehrere Spielelemente hinzu.
            </summary>
            <param name="elemente">Eine Liste von Spielelementen.</param>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.Remove(System.Collections.Generic.List{`0})">
            <summary>
            Entfernt mehrere Elemente aus dem Gitter.
            </summary>
            <param name="elemente">Eine Liste von Spielelementen.</param>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.FindSorted(AntMe.Simulation.ICoordinate,System.Int32)">
            <summary>
            Findet alle Spielelemente innerhalb des gegebenen Sichtkreis des gegebenen Spielelements.
            </summary>
            <param name="coordinate">Das Referenzspielelement.</param>
            <param name="maximumDistance">Die maximale Entfernung.</param>
            <returns>Eine nach Entfernung sortierte Liste von Spielelementen.</returns>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.FindAnts(AntMe.Simulation.CoreBug)">
            <summary>
            Findet alle Spielelemente innerhalb des Sichtkreis der gegebenen Wanze.
            </summary>
            <remarks>
            Die Simulation legt ein Gitter mit der maximalen Sichtweite der Wanzen als
            Seitenlänge an und benutzt diese Methode auf dieser Instanz zum Finden von
            Ameisen. In dieses Gitter werden nur Ameisen einsortiert.
            </remarks>
            <param name="bug">Die Referenzwanze.</param>
            <returns>Eine Liste von Ameisen.</returns>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.FindMarker(AntMe.Simulation.CoreAnt)">
            <summary>
            Findet die Markierung, die die gegebene Ameise noch nicht gerochen hat
            und die der Ameise am nächsten liegt.
            </summary>
            <remarks>
            Die Simulation legt ein Gitter mit dem maximalen Radius einer Markierung als
            Seitenlänge an und benutzt diese Methode auf dieser Instanz zum Finden von
            Markierungen. In dieses Gitter werden nur Markierungen einsortiert.
            </remarks>
            <param name="ant">Die Referenzameise.</param>
            <returns>Eine Markierung.</returns>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.FindAndCountInsects(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreBug@,System.Int32@,AntMe.Simulation.CoreAnt@,System.Int32@,AntMe.Simulation.CoreAnt@,System.Int32@,System.Int32@,AntMe.Simulation.CoreAnt@,System.Int32@)">
            <summary>
            Findet die Wanze, die feindliche Ameise und die befreundete Ameise mit der
            geringsten Entfernung innerhalb des Sichtkreis der gegebenen Ameise und
            zählt die Anzahl an Wanzen, feindlichen und befreundeten Ameisen im Sichtkreis.
            </summary>
            <remarks>
            Wird für Ameisen verwendet. Die Simulation legt für jeden vorkommenden Sichtradius
            eine eigenes Gitter an und benutzt diese Methode auf der passenden Instanz zum Finden
            von Insekten. Die Seitenlänge dieses Gitters ist also der Sichradius der Ameise.
            In diese Gitter werden Wanzen und Ameisen einsortiert.
            </remarks>
            <param name="ant">Die Referenzameise.</param>
            <param name="nearestBug">Eine Wanze.</param>
            <param name="bugCount">Die Anzahl an Wanzen.</param>
            <param name="nearestEnemyAnt">Eine feindliche Ameise.</param>
            <param name="enemyAntCount">Die Anzahl an feindlichen Ameisen.</param>
            <param name="nearestColonyAnt">Eine befreundete Ameise.</param>
            <param name="colonyAntCount">Die Anzahl an befreundeten Ameisen.</param>
            <param name="casteAntCount">Die Anzahl an befreundeten Ameisen der selben Kaste.</param>
        </member>
        <member name="T:AntMe.Simulation.Grid`1.GridSize">
            <summary>
            Speichert die Abmessungen eines Gitters.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.Grid`1.GridSize.Width">
            <summary>
            Die Breite des Gitters.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.Grid`1.GridSize.Height">
            <summary>
            Die Höhe des Gitters.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.Grid`1.GridSize.SideLength">
            <summary>
            Die Seitenlänge einer Gitterzelle.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.Grid`1.GridSize.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Struktur.
            </summary>
            <param name="width">Die Breite des Gitters.</param>
            <param name="height">Die Höhe des Gitters.</param>
            <param name="sideLength">Die Seitenlänge einer Gitterzelle.</param>
        </member>
        <member name="T:AntMe.Simulation.CoreFruit">
            <summary>
            Represents fruit.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreFood">
            <summary>
            Die abstrakte Basisklasse für Nahrung.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreFood.Id">
            <summary>
            Die Id die die Nahrung während eines Spiels eindeutig identifiziert.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreFood.koordinate">
            <summary>
            Die Position der Nahrung auf dem Spielfeld.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreFood.menge">
            <summary>
            Die verbleibende Menge an Nahrungspunkten.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreFood.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Der abstrakte Nahrung-Basiskonstruktor.
            </summary>
            <param name="x">Die X-Position der Koordinate auf dem Spielfeld.</param>
            <param name="y">Die Y-Position der Koordinate auf dem Spielfeld.</param>
            <param name="menge">Die Anzahl der Nahrungspunkte.</param>
        </member>
        <member name="P:AntMe.Simulation.CoreFood.Menge">
            <summary>
            Die verbleibende Menge an Nahrungspunkten.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreFood.CoordinateBase">
            <summary>
            Die Position der Nahrung auf dem Spielfeld.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreFruit.TragendeInsekten">
            <summary>
            Liste der tragenden Ameisen.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreFruit.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Obst-Klasse.
            </summary>
            <param name="x">Die X-Position des Obststücks auf dem Spielfeld.</param>
            <param name="y">Die Y-Position des Obststücks auf dem Spielfeld.</param>
            <param name="menge">Die Anzahl an Nahrungspunkten.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreFruit.BrauchtNochTräger(AntMe.Simulation.CoreColony)">
            <summary>
            Bestimmt, ob das Stück Obst für das angegebene Volk noch tragende
            Insekten benötigt, um die maximale Geschwindigkeit beim Tragen zu
            erreichen.
            </summary>
            <param name="colony">Das Volk.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreFruit.ErzeugeInfo">
            <summary>
            Erzeugt ein ObstZustand-Objekt mit dem Daten Zustand des Obststücks.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreFruit.Menge">
            <summary>
            Die verbleibende Menge an Nahrungspunkten.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreKindOfDeath">
            <summary>
            Beschreibt wie eine Ameise gestorben ist.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="F:AntMe.Simulation.CoreKindOfDeath.Starved">
            <summary>
            Gibt an, dass die Ameise verhungert ist.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreKindOfDeath.Eaten">
            <summary>
            Gibt an, dass die Ameise von einer Wanze gefressen wurde.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreKindOfDeath.Beaten">
            <summary>
            Gibt an, dass die Ameise von einer feindlichen Ameise besiegt wurde.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreSugar">
            <summary>
            Represents a sugar-Hill.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreSugar.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an instance of CoreSugar.
            </summary>
            <param name="x">The x-position of sugar on playground.</param>
            <param name="y">The y-position of sugar on playground.</param>
            <param name="amount">The amount of food.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreSugar.CreateState">
            <summary>
            Creates a sugar-state of this sugar-hill.
            </summary>
            <returns>current state of that sugar-hill.</returns>
        </member>
        <member name="T:AntMe.Simulation.DebugMessage">
            <summary>
            Klasse zur Weiterleitung von Debug-Information mit Kontextinformationen
            </summary>
        </member>
        <member name="M:AntMe.Simulation.DebugMessage.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Konstruktor einer Debugnachricht
            </summary>
            <param name="spieler">ID des spielers</param>
            <param name="ameise">ID der Ameise</param>
            <param name="nachricht">Nachricht</param>
        </member>
        <member name="P:AntMe.Simulation.DebugMessage.Zeit">
            <summary>
            Zeitpunkt der Nachricht
            </summary>
        </member>
        <member name="P:AntMe.Simulation.DebugMessage.Spieler">
            <summary>
            Assoziierter Spieler
            </summary>
        </member>
        <member name="P:AntMe.Simulation.DebugMessage.Ameise">
            <summary>
            ID der betroffenen Ameise
            </summary>
        </member>
        <member name="P:AntMe.Simulation.DebugMessage.Nachricht">
            <summary>
            Die Debugnachricht
            </summary>
        </member>
        <member name="T:AntMe.Simulation.Area">
            <summary>
            List of possible areas
            </summary>
        </member>
        <member name="T:AntMe.Simulation.AreaChangeEventArgs">
            <summary>
            Event-Arguments for a AreaChange-Event
            </summary>
        </member>
        <member name="M:AntMe.Simulation.AreaChangeEventArgs.#ctor">
            <summary>
            Creates a new AreaChangeEventArgs to unknown area.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.AreaChangeEventArgs.#ctor(AntMe.Simulation.PlayerInfo,AntMe.Simulation.Area)">
            <summary>
            Creates a new AreaChangeEventArgs to given area and player.
            </summary>
            <param name="player">player</param>
            <param name="area">area</param>
        </member>
        <member name="P:AntMe.Simulation.AreaChangeEventArgs.Player">
            <summary>
            Gets the player.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.AreaChangeEventArgs.Area">
            <summary>
            Gets the area.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.AreaChangeEventHandler">
            <summary>
            Delegate for area-changes.
            </summary>
            <param name="sender">sending simulation-environment</param>
            <param name="e">arguments for event</param>
        </member>
        <member name="T:AntMe.Simulation.NamespaceDoc">
            <summary>
            Namespace Doc für Simulation
            </summary>
        </member>
        <member name="T:AntMe.Simulation.RuleViolationException">
            <summary>
            Wird bei einer Regelverletzung der AntMe-Spielregeln geworfen
            </summary>
        </member>
        <member name="M:AntMe.Simulation.RuleViolationException.#ctor">
            <summary>
            KOnstruktor der Regelverletzung ohne weitere Angaben
            </summary>
        </member>
        <member name="M:AntMe.Simulation.RuleViolationException.#ctor(System.String)">
            <summary>
            Konsruktor der Regelverletzung mit der Übergabe einer Beschreibung zur Verletzung
            </summary>
            <param name="message">Beschreibung der Regelverletzung</param>
        </member>
        <member name="M:AntMe.Simulation.RuleViolationException.#ctor(System.String,System.Exception)">
            <summary>
            Konstruktor zur Regelverletung mit übergabe einer Nachricht sowie einer verursachenden Exception
            </summary>
            <param name="message">Beschreibung zum Problem</param>
            <param name="innerException">Verursachende Exception</param>
        </member>
        <member name="M:AntMe.Simulation.RuleViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Konstruktor für die Serialisierung dieser Exception
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:AntMe.Simulation.AiAnalysis">
            <summary>
            Class, to extract PlayerInfos from given Ai-Assembly.
            </summary>
            <author>Tom Wendel (tom@antme.net)</author>
        </member>
        <member name="M:AntMe.Simulation.AiAnalysis.Analyse(System.String)">
            <summary>
            Analyzes a Ai-File based on filename.
            </summary>
            <param name="filename">Ai-File to analyze.</param>
            <returns>List of found PlayerInfos</returns>
            <throws><see cref="T:System.ArgumentException"/></throws>
            <throws><see cref="T:System.ArgumentNullException"/></throws>
            <throws><see cref="T:System.IO.PathTooLongException"/></throws>
            <throws><see cref="T:System.IO.DirectoryNotFoundException"/></throws>
            <throws><see cref="T:System.IO.IOException"/></throws>
            <throws><see cref="T:System.UnauthorizedAccessException"/></throws>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <throws><see cref="T:System.NotSupportedException"/></throws>
            <throws><see cref="T:System.Security.SecurityException"/></throws>
            <throws><see cref="T:System.IO.FileLoadException"/></throws>
            <throws><see cref="T:System.BadImageFormatException"/></throws>
            <throws><see cref="T:AntMe.Simulation.RuleViolationException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.AiAnalysis.Analyse(System.String,System.Boolean)">
            <summary>
            Analyzes a Ai-File based on filename.
            </summary>
            <param name="filename">Ai-File to analyze.</param>
            <param name="checkRules">True, if Analyser should also check player-rules.</param>
            <returns>List of found PlayerInfos</returns>
            <throws><see cref="T:System.ArgumentException"/></throws>
            <throws><see cref="T:System.ArgumentNullException"/></throws>
            <throws><see cref="T:System.IO.PathTooLongException"/></throws>
            <throws><see cref="T:System.IO.DirectoryNotFoundException"/></throws>
            <throws><see cref="T:System.IO.IOException"/></throws>
            <throws><see cref="T:System.UnauthorizedAccessException"/></throws>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <throws><see cref="T:System.NotSupportedException"/></throws>
            <throws><see cref="T:System.Security.SecurityException"/></throws>
            <throws><see cref="T:System.IO.FileLoadException"/></throws>
            <throws><see cref="T:System.BadImageFormatException"/></throws>
            <throws><see cref="T:AntMe.Simulation.RuleViolationException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.AiAnalysis.Analyse(System.Byte[])">
            <summary>
            Analyzes a Ai-File based on binary file-dump.
            </summary>
            <param name="file">Ai-File to analyze.</param>
            <returns>List of found PlayerInfos</returns>
            <throws><see cref="T:System.IO.FileLoadException"/></throws>
            <throws><see cref="T:System.BadImageFormatException"/></throws>
            <throws><see cref="T:System.ArgumentNullException"/></throws>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <throws><see cref="T:AntMe.Simulation.RuleViolationException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.AiAnalysis.Analyse(System.Byte[],System.Boolean)">
            <summary>
            Analyzes a Ai-File based on binary file-dump.
            </summary>
            <param name="file">Ai-File to analyze.</param>
            <param name="checkRules">True, if Analyser should also check player-rules.</param>
            <returns>List of found PlayerInfos</returns>
            <throws><see cref="T:System.IO.FileLoadException"/></throws>
            <throws><see cref="T:System.BadImageFormatException"/></throws>
            <throws><see cref="T:System.ArgumentNullException"/></throws>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <throws><see cref="T:AntMe.Simulation.RuleViolationException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.AiAnalysis.FindPlayerInformation(System.Byte[],System.String)">
            <summary>
            Find a specific Player-information in given Ai-File.
            </summary>
            <param name="file">File as binary file-dump</param>
            <param name="className">Class-name of Ai</param>
            <returns>the right <see cref="T:AntMe.Simulation.PlayerInfo"/></returns>
            <throws><see cref="T:System.NotSupportedException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.AiAnalysis.FindPlayerInformation(System.String,System.String)">
            <summary>
            Find a specific <see cref="T:AntMe.Simulation.PlayerInfo"/> in given Ai-File.
            </summary>
            <param name="file">File as filename</param>
            <param name="className">Class-name of Ai</param>
            <returns>the right <see cref="T:AntMe.Simulation.PlayerInfo"/> or null for no hits</returns>
        </member>
        <member name="T:AntMe.Simulation.CoreCoordinate">
            <summary>
            Die Position eines Objekts auf dem Spielfeld.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Koordinate-Struktur.
            </summary>
            <param name="x">Der X-Wert des Elementes.</param>
            <param name="y">Der Y-Wert des Elementes.</param>
            <param name="radius">Der Radius des Elementes.</param>
            <param name="richtung">Die Richtung in die das Element blickt.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Koordinate-Struktur.
            </summary>
            <param name="x">Der X-Wert des Elementes.</param>
            <param name="y">Der Y-Wert des Elementes.</param>
            <param name="radius">Der Radius des Elementes.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.#ctor(System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Koordinate-Struktur.
            </summary>
            <param name="x">Der X-Wert des Elementes.</param>
            <param name="y">Der Y-Wert des Elementes.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.#ctor(AntMe.Simulation.CoreCoordinate,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Koordinate-Struktur ausgehend von einer
            bestehenden Koordinate.
            </summary>
            <param name="k">Die bestehende Koordinate.</param>
            <param name="deltaX">Der X-Wert relativ zu der Koordinate.</param>
            <param name="deltaY">Der Y-Wert relativ zu der Koordinate.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.BestimmeEntfernung(AntMe.Simulation.ICoordinate,AntMe.Simulation.ICoordinate)">
            <summary>
            Bestimmt die Entfernung zweier Objekte auf dem Spielfeld in Schritten.
            </summary>
            <param name="o1">Objekt 1.</param>
            <param name="o2">Objekt 2.</param>
            <returns>Die Entfernung.</returns>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.BestimmeRichtung(AntMe.Simulation.ICoordinate,AntMe.Simulation.ICoordinate)">
            <summary>
            Bestimmt die Richtung von einem Objekt auf dem Spielfeld zu einem
            anderen.
            </summary>
            <param name="o1">Das Start Objekt.</param>
            <param name="o2">Das Ziel Objekt.</param>
            <returns>Die Richtung.</returns>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.BestimmeEntfernungI(AntMe.Simulation.CoreCoordinate,AntMe.Simulation.CoreCoordinate)">
            <summary>
            Bestimmt die Entfernung zweier Koordinaten auf dem Spielfeld in der
            internen Einheit.
            </summary>
            <param name="k1">Koordinate 1.</param>
            <param name="k2">Koordinate 2.</param>
            <returns>Die Entfernung.</returns>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.BestimmeEntfernungDerMittelpunkteI(AntMe.Simulation.CoreCoordinate,AntMe.Simulation.CoreCoordinate)">
            <summary>
            Bestimmt die Entfernung zweier Koordinaten auf dem Spielfeld in der 
            internen Einheit ohne Beachtung der Radien.
            </summary>
            <param name="k1">Koordinate 1.</param>
            <param name="k2">Koordinate 2.</param>
            <returns>Die Entfernung.</returns>
        </member>
        <member name="M:AntMe.Simulation.CoreCoordinate.BestimmeRichtung(AntMe.Simulation.CoreCoordinate,AntMe.Simulation.CoreCoordinate)">
            <summary>
            Bestimmt die Richtung von einer Koordinate auf dem Spielfeld zu einer
            anderen.
            </summary>
            <param name="k1">Die Start Koordinate.</param>
            <param name="k2">Die Ziel Koordinate.</param>
            <returns>Die Richtung.</returns>
        </member>
        <member name="P:AntMe.Simulation.CoreCoordinate.X">
            <summary>
            Der X-Wert des Elements.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreCoordinate.Y">
            <summary>
            Der Y-Wert des Elements.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreCoordinate.Radius">
            <summary>
            Der Radius des Elementes. Da alle Berechnungen in der Spiel (z.B.
            die Bestimmung von Entfernungen) auf Punkten und Kreisen basiert, wird
            auch der Radius eines Objektes in der IKoordinate Struktur gespeichert.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreCoordinate.Richtung">
            <summary>
            Die Richtung in die das Element blickt. Eine Richtung ist zwar kein
            echter Teil einer Koordinate und nicht alle Elemente die eine Koordinate
            haben benötigen die Richtung, aber die IKoordinate-Struktur ist der
            beste Platz um auch die Richtung eines Objektes zu speichern.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreMarker">
            <summary>
            Eine Duft-Markierung die eine Information enthält.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="F:AntMe.Simulation.CoreMarker.Id">
            <summary>
            Die Id die die Markierung während eines Spiels eindeutig identifiziert.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreMarker.#ctor(AntMe.Simulation.CoreCoordinate,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Markierung-Klasse.
            </summary>
            <param name="koordinate">Die Koordinate der Markierung.</param>
            <param name="ausbreitung">Die Ausbreitung der Markierung in Schritten.
            </param>
            <param name="colonyId">ID des Volkes</param>
        </member>
        <member name="M:AntMe.Simulation.CoreMarker.Aktualisieren">
            <summary>
            Erhöht das Alter der Markierung und passt ihren Radius an.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreMarker.ErzeugeInfo">
            <summary>
            Erzeugt ein MarkierungZustand-Objekt mit den aktuellen Daten der
            Markierung.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreMarker.Information">
            <summary>
            Die gespeicherte Information.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreMarker.IstAktiv">
            <summary>
            Bestimmt ob die Markierung ihre maximales Alter noch nicht überschritten
            hat.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.CoreMarker.CoordinateBase">
            <summary>
            Die Position der Markierung auf dem Spielfeld.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.PlayerSimulationVersions">
            <summary>
            List of possible versions of simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerSimulationVersions.Version_1_1">
            <summary>
            Version 1.1 - Singleplayer-Variante
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerSimulationVersions.Version_1_5">
            <summary>
            Version 1.5 - war nur als Beta verfügbar und stellt die erste Multiplayer-Variante dar
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerSimulationVersions.Version_1_6">
            <summary>
            Version 1.6 - die Basis für die erste Online-Version
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerSimulationVersions.Version_1_7">
            <summary>
            fx 4.0 Port of Version 1.6
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerSimulationVersions.Version_2_0">
            <summary>
            Version 2.0 - Bisher nicht vorhanden
            </summary>
        </member>
        <member name="T:AntMe.Simulation.SimulationCasteSettings">
            <summary>
            Holds the set of caste-Settings.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettings.Offset">
            <summary>
            Offset to shift the array-index.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettings.Sum">
            <summary>
            Sum of all points.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettings.Columns">
            <summary>
            List of caste-setting-columns.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationCasteSettings.RuleCheck">
            <summary>
            Checks the value-ranges of all properties.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationCasteSettings.MinIndex">
            <summary>
            Gives the lowest Column-Index.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationCasteSettings.MaxIndex">
            <summary>
            Gives the highest Column-Index.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationCasteSettings.Item(System.Int32)">
            <summary>
            Delivers the right caste-column.
            </summary>
            <param name="index">index of column</param>
            <returns>caste-Column</returns>
        </member>
        <member name="T:AntMe.Simulation.SimulationCasteSettingsColumn">
            <summary>
            Holds a set of caste-Settings in one column.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ATTACK_MINIMUM">
            <summary>
            Minimum attack-value
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ATTACK_MAXIMUM">
            <summary>
            Maximum attack-value
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ROTATIONSPEED_MINIMUM">
            <summary>
            Minimum rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ROTATIONSPEED_MAXIMUM">
            <summary>
            Maximum rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ENERGY_MINIMUM">
            <summary>
            Minimum rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ENERGY_MAXIMUM">
            <summary>
            Maximum rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.SPEED_MINIMUM">
            <summary>
            Minimum rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.SPEED_MAXIMUM">
            <summary>
            Maximum rotationspeed
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.LOAD_MINIMUM">
            <summary>
            Minimum load
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.LOAD_MAXIMUM">
            <summary>
            Maximum load
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.RANGE_MINIMUM">
            <summary>
            Minimum range
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.RANGE_MAXIMUM">
            <summary>
            Maximum range
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.VIEWRANGE_MINIMUM">
            <summary>
            Minimum viewrange
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.VIEWRANGE_MAXIMUM">
            <summary>
            Maximum viewrange
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.Attack">
            <summary>
            Attack-Value (Hit-points per Round)
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.RotationSpeed">
            <summary>
            Rotation-speed (Degrees per Round)
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.Energy">
            <summary>
            Hit-points-Value (Total points)
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.Speed">
            <summary>
            Speed-Value (Steps per Round)
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.Load">
            <summary>
            Load-Value (total food-load)
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.Range">
            <summary>
            Range-Value (total count of steps per life)
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationCasteSettingsColumn.ViewRange">
            <summary>
            View-range-Value (range in steps)
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationCasteSettingsColumn.RuleCheck">
            <summary>
            Checks, if values are valid
            </summary>
        </member>
        <member name="T:AntMe.Simulation.SimulationSettings">
            <summary>
            Simulation-Settings from application-configuration.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SettingsName">
            <summary>
            Sets or gets the name of this settings-set.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.Guid">
            <summary>
            Gets or sets Guid of that settings-set.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PlayGroundBaseSize">
            <summary>
            Gets the size of the playground in SquareAntSteps.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PlayGroundSizePlayerMultiplier">
            <summary>
            Gets the multiplier of additional playground-size per player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.AntHillRadius">
            <summary>
            Gets the radius of anthills.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BattleRange">
            <summary>
            Minimum Battle-Distance in steps between two insects.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.AntSimultaneousCount">
            <summary>
            Gets the maximum count of ants simultaneous on playground.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugSimultaneousCount">
            <summary>
            Gets the maximum count of bugs simultaneous on playground.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarSimultaneousCount">
            <summary>
            Gets the maximum count of sugar simultaneous on playground.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitSimultaneousCount">
            <summary>
            Gets the maximum count of fruit simultaneous on playground.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of bugs simultaneous on playground per player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of sugar simultaneous on playground per player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of fruit simultaneous on playground per player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.AntCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of ants simultaneous on playground per player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.AntTotalCount">
            <summary>
            Gets the maximum count of ants in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugTotalCount">
            <summary>
            Gets the maximum count of bugs in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarTotalCount">
            <summary>
            Gets the maximum count of sugar in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitTotalCount">
            <summary>
            Gets the maximum count of fruit in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.AntTotalCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of ants per player in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugTotalCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of bugs per player in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarTotalCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of sugar per player in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitTotalCountPlayerMultiplier">
            <summary>
            Gets the multiplier for maximum count of fruit per player in the whole simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.AntRespawnDelay">
            <summary>
            Gets the delay for ant before next respawn in rounds. 
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugRespawnDelay">
            <summary>
            Gets the delay for bugs before next respawn in rounds. 
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarRespawnDelay">
            <summary>
            Gets the delay for sugar before next respawn in rounds. 
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitRespawnDelay">
            <summary>
            Gets the delay for fruits before next respawn in rounds. 
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugAttack">
            <summary>
            Gets the attack-value of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugRotationSpeed">
            <summary>
            Gets the rotation speed of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugEnergy">
            <summary>
            Gets the energy of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugSpeed">
            <summary>
            Gets the speed of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugRadius">
            <summary>
            Gets the attack-range of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugRegenerationValue">
            <summary>
            Gets the regeneration-value of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.BugRegenerationDelay">
            <summary>
            Gets the delay in rounds between the regeneration-steps of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarAmountMinimum">
            <summary>
            Gets the minimal amount of food in sugar-hills.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.SugarAmountMaximum">
            <summary>
            Gets the maximum amount of food in sugar-hills.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitAmountMinimum">
            <summary>
            Gets the minimal amount of food in fruits.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitAmountMaximum">
            <summary>
            Gets the maximum amount of food in fruits.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitLoadMultiplier">
            <summary>
            Gets the multiplier for fruits between load and amount of food.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.FruitRadiusMultiplier">
            <summary>
            Gets the multiplier for fruits between radius and amount of food.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.MarkerSizeMinimum">
            <summary>
            Gets the minimal size of a marker.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.MarkerDistance">
            <summary>
            Gets the minimal allowed distance between to marker.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.MarkerMaximumAge">
            <summary>
            Gets the maximum age in rounds of a marker.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForFoodMultiplier">
            <summary>
            Multiplier for the calculation from food to points.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForFruits">
            <summary>
            Gets the amount of points for collected fruits.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForBug">
            <summary>
            Gets the amount of points for killed bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForForeignAnt">
            <summary>
            Gets the amount of points for killed foreign ants.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForEatenAnts">
            <summary>
            Gets the amount of points for own dead ants killed by bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForBeatenAnts">
            <summary>
            Gets the amount of points for own dead ants killed by foreign ants.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.PointsForStarvedAnts">
            <summary>
            Gets the amount of points for own dead starved ants.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationSettings.CasteSettings">
            <summary>
            Gives the caste-Settings.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.SetCustomSettings(AntMe.Simulation.SimulationSettings)">
            <summary>
            Sets a custom set of settings.
            </summary>
            <param name="settings">custom settings</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.SetDefaults">
            <summary>
            Resets the values to the default settings.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.RuleCheck">
            <summary>
            Checks the value-ranges of all properties.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.SaveSettings(AntMe.Simulation.SimulationSettings,System.String)">
            <summary>
            Saves the settings to a setting-file.
            </summary>
            <param name="settings">settings to save</param>
            <param name="filename">filename of target file</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.LoadSettings(System.String)">
            <summary>
            Loads settings from a setting-file.
            </summary>
            <param name="filename">filename of target file</param>
            <returns>Loaded settings</returns>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.ToString">
            <summary>
            Gives the name of the settings.
            </summary>
            <returns>Name of Settings</returns>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.Equals(System.Object)">
            <summary>
            Checks, if two different simulation-sets are equal.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AntMe.Simulation.SimulationSettings.GetHashCode">
            <summary>
            Generates a Hash-Code for that object.
            </summary>
            <returns>Hash-Code</returns>
        </member>
        <member name="P:AntMe.Simulation.SimulationSettings.Default">
            <summary>
            Gets the default settings.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationSettings.Custom">
            <summary>
            Gives the current simulation-settings
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationSettings.MaximumSpeed">
            <summary>
            Gets the maximal Speed of an insect.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationSettings.MarkerSizeMaximum">
            <summary>
            Gets the maximal size of a marker.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulationSettings.MarkerRangeMaximum">
            <summary>
            Gets the maximal size of a marker (without radius)
            </summary>
        </member>
        <member name="T:AntMe.Simulation.Simulator">
            <summary>
            Represents a complete encapsulated simulation-core.
            </summary>
            <author>Tom Wendel (tom@antme.net)</author>
        </member>
        <member name="M:AntMe.Simulation.Simulator.#ctor(AntMe.Simulation.SimulatorConfiguration)">
            <summary>
            Creates an Instance of simulator. Should be called only from factory.
            </summary>
            <param name="configuration">configuration</param>
        </member>
        <member name="M:AntMe.Simulation.Simulator.Step(AntMe.SharedComponents.States.SimulationState@)">
            <summary>
            Calculates the next step and deliver through parameter.
            </summary>
            <param name="simulationState">empty <see cref="T:AntMe.SharedComponents.States.SimulationState"/></param>
        </member>
        <member name="M:AntMe.Simulation.Simulator.Finalize">
            <summary>
            Disposes open resources.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.Simulator.Dispose">
            <summary>
            Disposes open resources.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.Simulator.Unload">
            <summary>
            Unloads simulator.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.State">
            <summary>
            Gets the current simulator-state.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.CurrentRound">
            <summary>
            Gets the current round of simulation.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.CurrentLoop">
            <summary>
            Gets the current loop of simulation.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.RoundTime">
            <summary>
            Gets the number of ticks the last round was running.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.LoopTime">
            <summary>
            Gets the total number of ticks the current Loop is running.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.TotalTime">
            <summary>
            Gets the total number of ticks the current simulator is working.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.PlayerRoundTimes">
            <summary>
            Gets a the total time of ticks a player needed in the last round.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.Simulator.PlayerLoopTimes">
            <summary>
            Gets the total number of ticks a player needed in the whole loop till now.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.SimulatorHost">
            <summary>
            Class, to host an simulation-Environment inside an <see cref="T:System.AppDomain"/>.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulatorHost.Init(AntMe.Simulation.SimulatorConfiguration)">
            <summary>
            Initialize the simulation-environment.
            </summary>
            <param name="config">configuration</param>
        </member>
        <member name="M:AntMe.Simulation.SimulatorHost.Step(AntMe.SharedComponents.States.SimulationState@)">
            <summary>
            Executes one single step in simulation and returns hostState.
            </summary>
            <returns>Summery of the executed simulationStep</returns>
        </member>
        <member name="M:AntMe.Simulation.SimulatorHost.step">
            <summary>
            Internal step-Method to calculate the next step
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorHost.Exception">
            <summary>
            Gets the last thrown exception.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.SimulatorHostState">
            <summary>
            Statusklasse zur Weitergabe des aktuellen Spielstandes aus dem Host zurück zum Simulator
            </summary>
            <author>Tom Wendel (tom@antme.net)</author>
        </member>
        <member name="T:AntMe.Simulation.SimulatorConfiguration">
            <summary>
            Klasse zur Haltung aller relevanten Konfigurationsdaten einer Simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.PLAYERLIMIT">
            <summary>
            Maximum count of players per Simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.ROUNDSMIN">
            <summary>
            Minimum count of rounds for a valid simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.ROUNDSMAX">
            <summary>
            Maximum count of rounds for a valid simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.LOOPSMIN">
            <summary>
            Minimum count of loops for a valid simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.LOOPSMAX">
            <summary>
            
            Maximum count of loops for a valid simulation.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.ROUNDTIMEOUTMIN">
            <summary>
            Minimum value for round-timeouts.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.LOOPTIMEOUTMIN">
            <summary>
            Minimum value for loop-timeouts.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorConfiguration.ignoreTimeouts">
            <summary>
            Timeout-Handling
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulatorConfiguration.#ctor">
            <summary>
            Initialisiert eine leere Spielerliste
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulatorConfiguration.#ctor(System.Int32,System.Int32,System.Collections.Generic.List{AntMe.Simulation.TeamInfo})">
            <summary>
            Initialsiert mit den übergebenen Werten
            </summary>
            <param name="loops">Anzahl Durchläufe</param>
            <param name="rounds">Anzahl Runden</param>
            <param name="teams">Teamliste</param>
        </member>
        <member name="M:AntMe.Simulation.SimulatorConfiguration.Rulecheck">
            <summary>
            Ermittelt, ob die Angaben der Konfiguration simulationsfähig sind
            </summary>
            <returns>Regelkonformer Konfigurationsinhalt</returns>
        </member>
        <member name="M:AntMe.Simulation.SimulatorConfiguration.Clone">
            <summary>
            Erstellt eine Kopie der Konfiguration
            </summary>
            <returns>Kopie der aktuellen Konfiguration</returns>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.RoundCount">
            <summary>
            Gibt die Anzahl der Runden insgesamt an, die in der Simulation durchlaufen werden sollen oder legt diese fest.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.LoopCount">
            <summary>
            Gibt die Anzahl Durchläufe insgesamt an, die in der Simulation durchlaufen werden sollen oder legt diese fest.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.IgnoreTimeouts">
            <summary>
            Legt fest, ob die Simulation zu debugzwecken Timeouts ignorieren soll.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.RoundTimeout">
            <summary>
            Legt die Timeout-Zeit von Runden in ms fest
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.LoopTimeout">
            <summary>
            Legt die Timeout-Zeit von Durchläufen in ms fest
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.Teams">
            <summary>
            Liefert die Liste der Mitspieler in dieser Simulation.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.AllowUserinterfaceAccess">
            <summary>
            Legt fest, ob es den Spielern erlaubt ist auf das Userinterface zuzugreifen
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.AllowFileAccess">
            <summary>
            Legt fest, ob es den Spielern erlaubt ist auf das Dateisystem zuzugreifen
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.AllowReferences">
            <summary>
            Legt fest, ob es den Spielern erlaubt ist auf fremde Bibliotheken zuzugreifen
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.AllowDatabaseAccess">
            <summary>
            Legt fest, ob es den Spielern erlaubt ist Datenbankverbindungen zu öffnen
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.AllowNetworkAccess">
            <summary>
            Legt fest, ob es den Spielern erlaubt ist eine Netzwerkverbindung zu öffnen
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.AllowDebuginformation">
            <summary>
            Gibt an, ob die Simulation Debuginformationen ausgeben soll
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.MapInitialValue">
            <summary>
            Gibt einen Startwert für die Initialisierung des Zufallsgenerators an. Durch einen gleichen
            Startwert werden gleiche Startbedingungen garantiert.
            </summary>
        </member>
        <member name="P:AntMe.Simulation.SimulatorConfiguration.Settings">
            <summary>
            Gets or sets the simulation-settings for this simulation.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.SimulatorProxy">
            <summary>
            Proxy-Class to host an AppDomain für the encapsulated simulation.
            </summary>
            <author>Tom Wendel (tom@antme.net)</author>
        </member>
        <member name="F:AntMe.Simulation.SimulatorProxy.appDomain">
            <summary>
            Appdomain to host the simulation in.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorProxy.host">
            <summary>
            Proxy for the simulationHost inside the appDomain.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulatorProxy.Init(AntMe.Simulation.SimulatorConfiguration)">
            <summary>
            Initialisierung der Simulation
            </summary>
            <param name="configuration">Simulationskonfiguration</param>
        </member>
        <member name="M:AntMe.Simulation.SimulatorProxy.Step(AntMe.SharedComponents.States.SimulationState@)">
            <summary>
            Executes one single step in simulation and returns hostState.
            </summary>
            <param name="simulationState">The prefilled simulationState to put the currrent simulation-Snapshot in.</param>
            <returns>Summery of the executed simulationStep.</returns>
        </member>
        <member name="M:AntMe.Simulation.SimulatorProxy.Unload">
            <summary>
            Unloads the appdomain, if needed and reset the proxy.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.SimulatorState">
            <summary>
            Liste der möglichen Stati eines Simulators
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorState.Ready">
            <summary>
            Der Simulator ist initialisiert, aber noch nicht gestartet worden
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorState.Simulating">
            <summary>
            Der Simulator simuliert gerade
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulatorState.Finished">
            <summary>
            Die Simulation wurde beendet
            </summary>
        </member>
        <member name="T:AntMe.Simulation.PlayerCall">
            <summary>
            Static Class to encapsulate player-calls to his ant.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.#cctor">
            <summary>
            Creates a static instance of PlayerCall
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.Waits(AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "Waits()" on given ant.
            </summary>
            <param name="ant">ant</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.BecomesTired(AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "BecomesTired()" on given ant.
            </summary>
            <param name="ant">ant</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.Spots(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreSugar)">
            <summary>
            Perform call to "Spots(Sugar)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="sugar">sugar</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.Spots(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreFruit)">
            <summary>
            Perform call to "Spots(Fruit)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="fruit">fruit</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.TargetReached(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreSugar)">
            <summary>
            Perform call to "TargetReached(Sugar)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="sugar">sugar</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.TargetReached(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreFruit)">
            <summary>
            Perform call to "TargetReached(Fruit)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="fruit">fruit</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.SmellsFriend(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreMarker)">
            <summary>
            Perform call to "SmellsFriend()" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="marker">marker</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.SpotsFriend(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "SpotsFriend()" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="friend">friendly ant</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.SpotsTeamMember(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "SpotsTeamMember()" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="friend">friendly ant</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.SpotsEnemy(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreBug)">
            <summary>
            Perform call to "Spots(Bug)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="bug">bug</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.SpotsEnemy(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "Spots(Ant)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="enemy">foreign ant</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.UnderAttack(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "UnderAttack(Ant)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="enemy">enemy</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.UnderAttack(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreBug)">
            <summary>
            Perform call to "UnderAttack(Bug)" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="bug">bug</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.HasDied(AntMe.Simulation.CoreAnt,AntMe.Simulation.CoreKindOfDeath)">
            <summary>
            Perform call to "HasDied()" on given ant.
            </summary>
            <param name="ant">ant</param>
            <param name="kindOfDeath">kind of death</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerCall.Tick(AntMe.Simulation.CoreAnt)">
            <summary>
            Perform call to "Tick()" on given ant.
            </summary>
            <param name="ant">ant</param>
        </member>
        <member name="T:AntMe.Simulation.PlayerInfo">
            <summary>
            Holds all meta-information about a player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.castes">
            <summary>
            List of all castes.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.assembly">
            <summary>
            Reference to the ai-assembly-file.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.HasDebugInformation">
            <summary>
            true, if the Ai gives some debug-information.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.Guid">
            <summary>
            Guid of player.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.ColonyName">
            <summary>
            Name of colony.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.ClassName">
            <summary>
            Complete Class-name of colony-class.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.RequestDatabaseAccess">
            <summary>
            true, if the colony needs access to a database.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.RequestFileAccess">
            <summary>
            true, if the colony needs access to files.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.RequestNetworkAccess">
            <summary>
            true, if the colony needs access to the network.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.RequestInformation">
            <summary>
            Additional information about access-requests.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.RequestReferences">
            <summary>
            true, if the colony has references to other assemblies.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.RequestUserInterfaceAccess">
            <summary>
            true, if the colony needs access to user-interfaces.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.LastName">
            <summary>
            Last name of colony-author.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.FirstName">
            <summary>
            First name of colony-author.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.Language">
            <summary>
            Language of colony.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.Static">
            <summary>
            true, if the colony uses any static types.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfo.SimulationVersion">
            <summary>
            Simulator-Version of this colony.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfo.#ctor">
            <summary>
            Creates a new instance of PlayerInfo.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfo.#ctor(AntMe.Simulation.PlayerInfo)">
            <summary>
            Creates a new instance of PlayerInfo.
            </summary>
            <param name="info">Base-info</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfo.#ctor(System.Guid,System.String,System.String,System.String,System.String,AntMe.Simulation.PlayerSimulationVersions,AntMe.Simulation.PlayerLanguages,System.Boolean,System.Collections.Generic.List{AntMe.Simulation.CasteInfo},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates a new instance of PlayerInfo.
            </summary>
            <param name="guid">Guid of colony</param>
            <param name="colonyName">Name of colony</param>
            <param name="lastName">Last name of author</param>
            <param name="firstName">First name of author</param>
            <param name="className">Class-name of colony</param>
            <param name="staticVariables">Colony uses static types</param>
            <param name="simulationVersion">Version of simulator of this colony</param>
            <param name="language">Language of this colony</param>
            <param name="castes">List of castes</param>
            <param name="haveDebugInformation">Colony produces debug-information</param>
            <param name="requestUserinterfaceAccess">Needs access to user-interfaces</param>
            <param name="requestDatabaseAccess">Needs access to databases</param>
            <param name="requestFileAccess">Needs access to files</param>
            <param name="requestNetworkAccess">Needs access to network</param>
            <param name="requestReferences">Needs references to other assemblies</param>
            <param name="requestInformation">Additional information about security-requests</param>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfo.RuleCheck">
            <summary>
            Checks the rules.
            </summary>
            <throws><see cref="T:AntMe.Simulation.RuleViolationException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfo.Clone">
            <summary>
            Clones the whole object
            </summary>
            <returns>clone</returns>
        </member>
        <member name="P:AntMe.Simulation.PlayerInfo.Castes">
            <summary>
            Delivers the list of castes.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.PlayerInfoFiledump">
            <summary>
            SpielerInfo Klasse mit der angabe eines zusätzlichen Dumps einer Spieler-KI
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfoFiledump.File">
            <summary>
            Kopie der KI-Assembly
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFiledump.#ctor">
            <summary>
            Creates an instance of PlayerInfoFiledump
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFiledump.#ctor(System.Byte[])">
            <summary>
            Konstruktor der SpielerInfo mit Dateikopie
            <param name="file">Kopie der Datei in Form eines Byte[]</param>
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFiledump.#ctor(AntMe.Simulation.PlayerInfo,System.Byte[])">
            <summary>
            Konstruktor der SpielerInfo mit Dateikopie
            </summary>
            <param name="info">Basis SpielerInfo</param>
            <param name="file">Kopie der Datei in Form eines Byte[]</param>
        </member>
        <member name="T:AntMe.Simulation.PlayerInfoFilename">
            <summary>
            Spielerinfo mit zusätzlicher Angabe eines Dateinamens
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerInfoFilename.File">
            <summary>
            Pfad zur KI-Datei
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFilename.#ctor">
            <summary>
            Creates an instance of PlayerInfoFilename
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFilename.#ctor(System.String)">
            <summary>
            Konstruktor der SpielerInfo mit Dateinamen
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFilename.#ctor(AntMe.Simulation.PlayerInfo,System.String)">
            <summary>
            Konstruktor der SpielerInfo mit Dateinamen
            </summary>
            <param name="info"></param>
            <param name="file"></param>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFilename.Equals(System.Object)">
            <summary>
            Ermittelt, ob die KIs gleich sind
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:AntMe.Simulation.PlayerInfoFilename.GetHashCode">
            <summary>
            Erzeugt einen Hash aus den gegebenen Daten
            </summary>
            <returns>Hashcode</returns>
        </member>
        <member name="T:AntMe.Simulation.PlayerLanguages">
            <summary>
            List of possible player-languages.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerLanguages.Unknown">
            <summary>
            Unknown language
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerLanguages.Deutsch">
            <summary>
            German
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerLanguages.English">
            <summary>
            English
            </summary>
        </member>
        <member name="T:AntMe.Simulation.PlayerStatistics">
            <summary>
            Speichert die Statistik eines Spielers.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.CurrentAntCount">
            <summary>
            Die aktuelle Anzahl an Ameisen.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.KilledAnts">
            <summary>
            Die Anzahl der durch eigene Ameisen besiegten feindlichen Ameisen.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.KilledBugs">
            <summary>
            Die Anzahl der besiegten Wanzen.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.CollectedFood">
            <summary>
            Die Anzahl der gesammelten Nahrungspunkte.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.CollectedFruits">
            <summary>
            Anzahl gesammeltem Obst.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.StarvedAnts">
            <summary>
            Die Anzahl der verhungerten Ameisen.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.BeatenAnts">
            <summary>
            Die Anzahl der von feindlichen Ameisen besiegten eigenen Ameisen.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.PlayerStatistics.EatenAnts">
            <summary>
            Die Anzahl der von Wanzen gefressenen Ameisen.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.PlayerStatistics.op_Addition(AntMe.Simulation.PlayerStatistics,AntMe.Simulation.PlayerStatistics)">
            <summary>
            Zählt zwei Statistiken zusammen.
            </summary>
            <param name="s1">Statistik 1.</param>
            <param name="s2">Statistik 2.</param>
            <returns>Statistik 1 + Statistik 2.</returns>
        </member>
        <member name="P:AntMe.Simulation.PlayerStatistics.Points">
            <summary>
            Gibt die Gesamtpunktzahl zurück.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CorePlayground">
            <summary>
            Das Spielfeld.
            </summary>
            <author>Wolfgang Gallo (gallo@antme.net)</author>
        </member>
        <member name="M:AntMe.Simulation.CorePlayground.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instanz der Spielfeld-Klasse.
            </summary>
            <param name="breite">Die Breite in Schritten.</param>
            <param name="höhe">Die Höhe in Schritten.</param>
            <param name="randomSeed">Initialwert für Zufallsgenerator</param>
        </member>
        <member name="M:AntMe.Simulation.CorePlayground.NeuerZucker">
            <summary>
            Erzeugt einen neuen Zuckerhaufen.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CorePlayground.NeuesObst">
            <summary>
            Erzeugt ein neues Obsttück.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CorePlayground.NeuerBau(System.Int32)">
            <summary>
            Erzeugt einen neuen Bau.
            </summary>
            <param name="colony">Id of colony</param>
            <returns>Der neue Bau.</returns>
        </member>
        <member name="F:AntMe.Simulation.CorePlayground.Punkt.Radius">
            <summary>
            Der Radius.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CorePlayground.Punkt.X">
            <summary>
            Die X-Koordinate.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CorePlayground.Punkt.Y">
            <summary>
            Die Y-Koordinate.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CorePlayground.Punkt.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Erzeugt eine neue Instant der Punkt-Struktur.
            </summary>
            <param name="x">Die X-Koordinate.</param>
            <param name="y">Die Y-Koordinate.</param>
            <param name="radius">Der Radius.</param>
        </member>
        <member name="M:AntMe.Simulation.CorePlayground.Punkt.#ctor(AntMe.Simulation.CoreCoordinate)">
            <summary>
            Erzeugt eine neue Instant der Punkt-Struktur aus einer Koordinate.
            </summary>
            <param name="koordinate">Die Koordinate.</param>
        </member>
        <member name="T:AntMe.Simulation.SimulationEnvironment">
            <summary>
            Holds all simulation-elements.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.#ctor">
            <summary>
            Creates a new instance of SimulationEnvironment
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.playerCallAreaChanged(System.Object,AntMe.Simulation.AreaChangeEventArgs)">
            <summary>
            Weitergabe des Verantwortungswechsels
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.Init(AntMe.Simulation.SimulatorConfiguration)">
            <summary>
            Initialisiert die Simulation um mit Runde 1 zu beginnen
            </summary>
            <param name="configuration">Konfiguration der Simulation</param>
            <throws><see cref="T:System.ArgumentException"/></throws>
            <throws><see cref="T:System.ArgumentNullException"/></throws>
            <throws><see cref="T:System.IO.PathTooLongException"/></throws>
            <throws><see cref="T:System.IO.DirectoryNotFoundException"/></throws>
            <throws><see cref="T:System.IO.IOException"/></throws>
            <throws><see cref="T:System.UnauthorizedAccessException"/></throws>
            <throws><see cref="T:System.IO.FileNotFoundException"/></throws>
            <throws><see cref="T:System.NotSupportedException"/></throws>
            <throws><see cref="T:System.Security.SecurityException"/></throws>
            <throws><see cref="T:System.IO.FileLoadException"/></throws>
            <throws><see cref="T:System.BadImageFormatException"/></throws>
            <throws><see cref="T:AntMe.Simulation.RuleViolationException"/></throws>
            <throws><see cref="T:System.TypeLoadException"/></throws>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.Step(AntMe.SharedComponents.States.SimulationState)">
            <summary>
            Berechnet einen neuen Spielschritt
            </summary>
            <returns>Zustandskopie des Simulationsstandes nachdem der Schritt ausgeführt wurde</returns>
            <throws>RuleViolationException</throws>
            <throws>Exception</throws>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.erzeugeZustand(AntMe.SharedComponents.States.SimulationState)">
            <summary>
            Erzeugt einen Zustand aus dem aktuellen Spielumstand
            </summary>
            <returns>aktueller Spielstand</returns>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.Playground">
            <summary>
            Holds the current playground.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.Teams">
            <summary>
            Holds a list of active teams.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.Bugs">
            <summary>
            Holds the "colony" of bugs.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.Cos">
            <summary>
            Holds the calculated sin- and cos-values.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.Sin">
            <summary>
            Holds the calculated sin- and cos-values.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.precalculateAngles">
            <summary>
            Calculates all possible angles.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.sugarDelay">
            <summary>
            Delay-counter for sugar-respawn.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.sugarCountDown">
            <summary>
            Counts down the total number of allowed sugar-hills.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.sugarLimit">
            <summary>
            Gets the count of simultaneous existing sugar-hills. 
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.removeSugar">
            <summary>
            Removes all empty sugar-hills from list.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.spawnSugar">
            <summary>
            Spawns new sugar, if its time.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.fruitDelay">
            <summary>
            Delay-counter for fruit-respawn.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.fruitCountDown">
            <summary>
            Counts down the total number of allowed fruits.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.fruitLimit">
            <summary>
            Gets the count of simultaneous existing fruits. 
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.spawnFruit">
            <summary>
            Spawns new fruit, if its time.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.removeFruit(AntMe.Simulation.CoreColony)">
            <summary>
            Removes fruit from list.
            </summary>
            <param name="colony">winning colony</param>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.antLimit">
            <summary>
            Gets the count of simultaneous existing ants. 
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.ameiseUndZiel(AntMe.Simulation.CoreAnt)">
            <summary>
            Prüft ob eine Ameise an ihrem Ziel angekommen ist.
            </summary>
            <param name="ant">betroffene Ameise</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.ameiseUndZucker(AntMe.Simulation.CoreAnt)">
            <summary>
            Prüft ob eine Ameise einen Zuckerhaufen sieht.
            </summary>
            <param name="ant">betroffene Ameise</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.ameiseUndObst(AntMe.Simulation.CoreAnt)">
            <summary>
            Prüft ob eine Ameise ein Obsstück sieht.
            </summary>
            <param name="ameise">betroffene Ameise</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.ameiseUndMarkierungen(AntMe.Simulation.CoreAnt)">
            <summary>
            Prüft ob die Ameise eine Markierung bemerkt.
            </summary>
            <param name="ameise">betroffene Ameise</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.removeAnt(AntMe.Simulation.CoreColony)">
            <summary>
            Erntfernt Ameisen die keine Energie mehr haben.
            </summary>
            <param name="colony">betroffenes Volk</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.spawnAnt(AntMe.Simulation.CoreColony)">
            <summary>
            Erzeugt neue Ameisen.
            </summary>
            <param name="colony">betroffenes Volk</param>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.aktualisiereMarkierungen(AntMe.Simulation.CoreColony)">
            <summary>
            Entfernt abgelaufene Markierungen und erzeugt neue Markierungen.
            </summary>
            <param name="colony">betroffenes Volk</param>
        </member>
        <member name="F:AntMe.Simulation.SimulationEnvironment.bugLimit">
            <summary>
            Gets the count of simultaneous existing bugs. 
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.removeBugs">
            <summary>
            Remove dead bugs.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.healBugs">
            <summary>
            Heals the bugs, if its time.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.SimulationEnvironment.spawnBug">
            <summary>
            Spawn new bugs, if needed.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.TeamInfo">
            <summary>
            Repräsentiert ein Team innerhalb der Simulationskonfiguration
            </summary>
        </member>
        <member name="F:AntMe.Simulation.TeamInfo.Guid">
            <summary>
            Guid des Teams
            </summary>
        </member>
        <member name="F:AntMe.Simulation.TeamInfo.Name">
            <summary>
            Name des Teams
            </summary>
        </member>
        <member name="F:AntMe.Simulation.TeamInfo.player">
            <summary>
            Liste der enthaltenen Spieler
            </summary>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.#ctor">
            <summary>
            Konstruktor des Teams
            </summary>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.#ctor(System.Collections.Generic.List{AntMe.Simulation.PlayerInfo})">
            <summary>
            Konstruktor des Teams
            </summary>
            <param name="player">Liste der Spieler</param>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.#ctor(System.Guid,System.Collections.Generic.List{AntMe.Simulation.PlayerInfo})">
            <summary>
            Konstruktor des Teams
            </summary>
            <param name="guid">Guid des Teams</param>
            <param name="player">Liste der Spieler</param>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.#ctor(System.String,System.Collections.Generic.List{AntMe.Simulation.PlayerInfo})">
            <summary>
            Konstruktor des Teams
            </summary>
            <param name="name">Name des Teams</param>
            <param name="player">Liste der Spieler</param>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.#ctor(System.Guid,System.String,System.Collections.Generic.List{AntMe.Simulation.PlayerInfo})">
            <summary>
            Konstruktor des Teams
            </summary>
            <param name="guid">Guid des Teams</param>
            <param name="name">Name des Teams</param>
            <param name="player">Liste der Spieler</param>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.Rulecheck">
            <summary>
            Prüft, ob das Team regelkonform aufgebaut ist
            </summary>
        </member>
        <member name="M:AntMe.Simulation.TeamInfo.Clone">
            <summary>
            Erstellt eine Kopie des Teams
            </summary>
            <returns>Kopie des Teams</returns>
        </member>
        <member name="P:AntMe.Simulation.TeamInfo.Player">
            <summary>
            Liste der spieler dieses Teams
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreColony">
            <summary>
            Ein Ameisenvolk. Kapselt alle Informationen die zur Laufzeit eines Spiels
            zu einem Spieler anfallen.
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Id">
            <summary>
            Die Id die das Volk während eines laufenden Spiels idenzifiziert.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Guid">
            <summary>
            Die Guid, die das Volk eindeutig identifiziert.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Player">
            <summary>
            Der Spieler der das Verhalten des Volkes steuert.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.insectDelay">
            <summary>
            Zählt die Anzahl an Runden herunter, bis wieder eine neus Insekt erzeugt
            werden kann.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Angriff">
            <summary>
            Die Angriffswerte aller Kasten des Volkes.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Grids">
            <summary>
            Gitter für die verschiedenen Sichtweiten.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Drehgeschwindigkeit">
            <summary>
            Die Drehgeschwindigkeiten aller Kasten des Volkes in Grad pro Runde.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Energie">
            <summary>
            Die Lebenspunkte aller Kasten des Volkes.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.GeschwindigkeitI">
            <summary>
            Die Geschwindigkeiten aller Kasten des Volkes in der internen Einheit.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.Last">
            <summary>
            Die maximalen Lastwerte aller Kasten des Volkes.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.ReichweiteI">
            <summary>
            Die Reichweiten aller Kasten des Volkes in der internen Einheit.
            </summary>
        </member>
        <member name="F:AntMe.Simulation.CoreColony.SichtweiteI">
            <summary>
            Die Sichtweiten aller Kasten des Volkes in der internen Einheit.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreColony.#ctor(AntMe.Simulation.CorePlayground)">
            <summary>
            Erzeugt eine neue Instanz der Volk-Klasse. Erzeugt ein Wanzen-Volk.
            </summary>
            <param name="spielfeld">Das Spielfeld.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreColony.#ctor(AntMe.Simulation.CorePlayground,AntMe.Simulation.PlayerInfo,AntMe.Simulation.CoreTeam)">
            <summary>
            Erzeugt eine neue Instanz der Volk-Klasse. Erzeugt ein Ameisen-Volk.
            </summary>
            <param name="spielfeld">Das Spielfeld.</param>
            <param name="spieler">Das Spieler zu dem das Volk gehört.</param>
            <param name="team">Das dazugehörige Team.</param>
        </member>
        <member name="M:AntMe.Simulation.CoreColony.NeuesInsekt">
            <summary>
            Erstellt eine neues Insekt.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreColony.EntferneInsekt(AntMe.Simulation.CoreInsect)">
            <summary>
            Entfernt ein Insekt.
            </summary>
            <param name="insekt">Insekt</param>
        </member>
        <member name="M:AntMe.Simulation.CoreColony.ErzeugeInfo">
            <summary>
            Erzeugt ein VolkZustand Objekt mit dem aktuellen Zustand des Volkes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:AntMe.Simulation.CoreColony.AnzahlKasten">
            <summary>
            Die Anzahl von Insektenkasten in diesem Volk.
            </summary>
        </member>
        <member name="T:AntMe.Simulation.CoreBug">
            <summary>
            Eine Wanze
            </summary>
            <author>Wolfgang Gallo (wolfgang@antme.net)</author>
        </member>
        <member name="F:AntMe.Simulation.CoreBug.KannSichNochBewegen">
            <summary>
            Gibt an, ob die Wanze sich in der aktuellen Runde noch bewegen kann.
            </summary>
        </member>
        <member name="M:AntMe.Simulation.CoreBug.ErzeugeInfo">
            <summary>
            Erzeugt ein BugState-Objekt mit dem aktuellen Daten der Wanzen.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
